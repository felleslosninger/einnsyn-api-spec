openapi: 3.0.0
info:
  title: eInnsyn
  version: '1.0'
tags:
  - name: ApiKey
  - name: Arkiv
  - name: Arkivdel
  - name: Behandlingsprotokoll
  - name: Dokumentbeskrivelse
  - name: Dokumentobjekt
  - name: Enhet
  - name: Identifikator
  - name: Journalpost
  - name: Klasse
  - name: Klassifikasjonssystem
  - name: Korrespondansepart
  - name: Moetedeltaker
  - name: Moetedokument
  - name: Moetemappe
  - name: Moetesak
  - name: Moetesaksbeskrivelse
  - name: Saksmappe
  - name: Skjerming
  - name: Utredning
  - name: Vedtak
  - name: Votering
  - name: Bruker
  - name: Innsynskrav
  - name: InnsynskravBestilling
  - name: LagretSak
  - name: LagretSoek
  - name: Tilbakemelding
paths:
  /apiKey:
    get:
      operationId: ApiKeyRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiKey.ApiKey'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - ApiKey
  /apiKey/{id}:
    get:
      operationId: ApiKeyRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey.ApiKey'
      tags:
        - ApiKey
    patch:
      operationId: ApiKeyRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey.ApiKey'
      tags:
        - ApiKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey.ApiKeyUpdate'
    delete:
      operationId: ApiKeyRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey.ApiKey'
      tags:
        - ApiKey
  /arkiv:
    get:
      operationId: ArkivRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Arkiv.Arkiv'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkiv
    post:
      operationId: ArkivRoutes_add
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkiv.Arkiv'
      tags:
        - Arkiv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arkiv.Arkiv'
  /arkiv/{id}:
    get:
      operationId: ArkivRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkiv.Arkiv'
      tags:
        - Arkiv
    patch:
      operationId: ArkivRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkiv.Arkiv'
      tags:
        - Arkiv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arkiv.ArkivUpdate'
    delete:
      operationId: ArkivRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkiv.Arkiv'
      tags:
        - Arkiv
  /arkiv/{id}/arkiv:
    get:
      operationId: ArkivRoutes_listArkiv
      parameters:
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.id'
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.arkivId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Arkiv.Arkiv'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkiv
    post:
      operationId: ArkivRoutes_addArkiv
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkiv.Arkiv'
      tags:
        - Arkiv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arkiv.Arkiv'
  /arkiv/{id}/arkivdel:
    get:
      operationId: ArkivRoutes_listArkivdel
      parameters:
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.id'
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.arkivId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Arkivdel.Arkivdel'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkiv
    post:
      operationId: ArkivRoutes_addArkivdel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkivdel.Arkivdel'
      tags:
        - Arkiv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arkivdel.Arkivdel'
  /arkiv/{id}/moetemappe:
    get:
      operationId: ArkivRoutes_listMoetemappe
      parameters:
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.id'
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.arkivId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetemappe.Moetemappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkiv
    post:
      operationId: ArkivRoutes_addMoetemappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetemappe.Moetemappe'
      tags:
        - Arkiv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetemappe.Moetemappe'
  /arkiv/{id}/saksmappe:
    get:
      operationId: ArkivRoutes_listSaksmappe
      parameters:
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.id'
        - $ref: '#/components/parameters/Arkiv.ListByArkivParameters.arkivId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Saksmappe.Saksmappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkiv
    post:
      operationId: ArkivRoutes_addSaksmappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksmappe.Saksmappe'
      tags:
        - Arkiv
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saksmappe.Saksmappe'
  /arkivdel:
    get:
      operationId: ArkivdelRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Arkivdel.Arkivdel'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkivdel
  /arkivdel/{id}:
    get:
      operationId: ArkivdelRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkivdel.Arkivdel'
      tags:
        - Arkivdel
    patch:
      operationId: ArkivdelRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkivdel.Arkivdel'
      tags:
        - Arkivdel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arkivdel.ArkivdelUpdate'
    delete:
      operationId: ArkivdelRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arkivdel.Arkivdel'
      tags:
        - Arkivdel
  /arkivdel/{id}/klasse:
    get:
      operationId: ArkivdelRoutes_listKlasse
      parameters:
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.id'
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.arkivdelId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Klasse.Klasse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkivdel
    post:
      operationId: ArkivdelRoutes_addKlasse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klasse.Klasse'
      tags:
        - Arkivdel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Klasse.Klasse'
  /arkivdel/{id}/klassifikasjonssystem:
    get:
      operationId: ArkivdelRoutes_listKlassifikasjonssystem
      parameters:
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.id'
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.arkivdelId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkivdel
    post:
      operationId: ArkivdelRoutes_addKlassifikasjonssystem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
      tags:
        - Arkivdel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
  /arkivdel/{id}/moetemappe:
    get:
      operationId: ArkivdelRoutes_listMoetemappe
      parameters:
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.id'
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.arkivdelId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetemappe.Moetemappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkivdel
    post:
      operationId: ArkivdelRoutes_addMoetemappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetemappe.Moetemappe'
      tags:
        - Arkivdel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetemappe.Moetemappe'
  /arkivdel/{id}/saksmappe:
    get:
      operationId: ArkivdelRoutes_listSaksmappe
      parameters:
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.id'
        - $ref: '#/components/parameters/Arkivdel.ListByArkivdelParameters.arkivdelId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Saksmappe.Saksmappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Arkivdel
    post:
      operationId: ArkivdelRoutes_addSaksmappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksmappe.Saksmappe'
      tags:
        - Arkivdel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saksmappe.Saksmappe'
  /behandlingsprotokoll:
    get:
      operationId: BehandlingsprotokollRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Behandlingsprotokoll.Behandlingsprotokoll'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Behandlingsprotokoll
  /behandlingsprotokoll/{id}:
    get:
      operationId: BehandlingsprotokollRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Behandlingsprotokoll.Behandlingsprotokoll'
      tags:
        - Behandlingsprotokoll
    patch:
      operationId: BehandlingsprotokollRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Behandlingsprotokoll.Behandlingsprotokoll'
      tags:
        - Behandlingsprotokoll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Behandlingsprotokoll.BehandlingsprotokollUpdate'
    delete:
      operationId: BehandlingsprotokollRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Behandlingsprotokoll.Behandlingsprotokoll'
      tags:
        - Behandlingsprotokoll
  /bruker:
    get:
      operationId: BrukerRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bruker.Bruker'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Bruker
    post:
      operationId: BrukerRoutes_add
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bruker.Bruker'
  /bruker/{id}:
    get:
      operationId: BrukerRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
    patch:
      operationId: BrukerRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bruker.BrukerUpdate'
    delete:
      operationId: BrukerRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
  /bruker/{id}/activate/{secret}:
    patch:
      operationId: BrukerRoutes_activate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
        - name: secret
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
  /bruker/{id}/innsynskrav:
    get:
      operationId: BrukerRoutes_listInnsynskrav
      parameters:
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.id'
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.brukerId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Bruker
  /bruker/{id}/innsynskravBestilling:
    get:
      operationId: BrukerRoutes_listInnsynskravBestilling
      parameters:
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.id'
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.brukerId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Bruker
    post:
      operationId: BrukerRoutes_addInnsynskravBestilling
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
      tags:
        - Bruker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
  /bruker/{id}/lagretSak:
    get:
      operationId: BrukerRoutes_listLagretSak
      parameters:
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.id'
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.brukerId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/LagretSak.LagretSak'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Bruker
    post:
      operationId: BrukerRoutes_addLagretSak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSak.LagretSak'
      tags:
        - Bruker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagretSak.LagretSak'
  /bruker/{id}/lagretSoek:
    get:
      operationId: BrukerRoutes_listLagretSoek
      parameters:
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.id'
        - $ref: '#/components/parameters/Bruker.ListByBrukerParameters.brukerId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/LagretSoek.LagretSoek'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Bruker
    post:
      operationId: BrukerRoutes_addLagretSoek
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSoek.LagretSoek'
      tags:
        - Bruker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagretSoek.LagretSoek'
  /bruker/{id}/requestPasswordReset:
    patch:
      operationId: BrukerRoutes_requestPasswordReset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
  /bruker/{id}/updatePassword:
    patch:
      operationId: BrukerRoutes_updatePassword
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
  /bruker/{id}/updatePassword/{secret}:
    patch:
      operationId: BrukerRoutes_updatePasswordWithSecret
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
        - name: secret
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bruker.Bruker'
      tags:
        - Bruker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
  /dokumentbeskrivelse:
    get:
      operationId: DokumentbeskrivelseRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Dokumentbeskrivelse
  /dokumentbeskrivelse/{id}:
    get:
      operationId: DokumentbeskrivelseRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Dokumentbeskrivelse
    patch:
      operationId: DokumentbeskrivelseRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Dokumentbeskrivelse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dokumentbeskrivelse.DokumentbeskrivelseUpdate'
    delete:
      operationId: DokumentbeskrivelseRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Dokumentbeskrivelse
  /dokumentobjekt:
    get:
      operationId: DokumentobjektRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dokumentobjekt.Dokumentobjekt'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Dokumentobjekt
  /dokumentobjekt/{id}:
    get:
      operationId: DokumentobjektRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentobjekt.Dokumentobjekt'
      tags:
        - Dokumentobjekt
    patch:
      operationId: DokumentobjektRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentobjekt.Dokumentobjekt'
      tags:
        - Dokumentobjekt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dokumentobjekt.DokumentobjektUpdate'
    delete:
      operationId: DokumentobjektRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentobjekt.Dokumentobjekt'
      tags:
        - Dokumentobjekt
  /enhet:
    get:
      operationId: EnhetRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Enhet.Enhet'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Enhet
    post:
      operationId: EnhetRoutes_add
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enhet.Enhet'
      tags:
        - Enhet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enhet.Enhet'
  /enhet/{id}:
    get:
      operationId: EnhetRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enhet.Enhet'
      tags:
        - Enhet
    patch:
      operationId: EnhetRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enhet.Enhet'
      tags:
        - Enhet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enhet.EnhetUpdate'
    delete:
      operationId: EnhetRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enhet.Enhet'
      tags:
        - Enhet
  /enhet/{id}/apiKey:
    get:
      operationId: EnhetRoutes_listApiKey
      parameters:
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.id'
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.enhetId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiKey.ApiKey'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Enhet
    post:
      operationId: EnhetRoutes_addApiKey
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey.ApiKey'
      tags:
        - Enhet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey.ApiKey'
  /enhet/{id}/arkiv:
    get:
      operationId: EnhetRoutes_listArkiv
      parameters:
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.id'
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.enhetId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Arkiv.Arkiv'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Enhet
  /enhet/{id}/innsynskrav:
    get:
      operationId: EnhetRoutes_listInnsynskrav
      parameters:
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.id'
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.enhetId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Enhet
  /enhet/{id}/underenhet:
    get:
      operationId: EnhetRoutes_listUnderenhet
      parameters:
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.id'
        - $ref: '#/components/parameters/Enhet.ListByEnhetParameters.enhetId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Enhet.Enhet'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Enhet
    post:
      operationId: EnhetRoutes_addUnderenhet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enhet.Enhet'
      tags:
        - Enhet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Enhet.Enhet'
  /identifikator:
    get:
      operationId: IdentifikatorRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Identifikator.Identifikator'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Identifikator
  /identifikator/{id}:
    get:
      operationId: IdentifikatorRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifikator.Identifikator'
      tags:
        - Identifikator
    patch:
      operationId: IdentifikatorRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifikator.Identifikator'
      tags:
        - Identifikator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identifikator.IdentifikatorUpdate'
    delete:
      operationId: IdentifikatorRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifikator.Identifikator'
      tags:
        - Identifikator
  /innsynskrav:
    get:
      operationId: InnsynskravRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Innsynskrav
  /innsynskrav/{id}:
    get:
      operationId: InnsynskravRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
      tags:
        - Innsynskrav
    patch:
      operationId: InnsynskravRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
      tags:
        - Innsynskrav
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Innsynskrav.InnsynskravUpdate'
    delete:
      operationId: InnsynskravRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
      tags:
        - Innsynskrav
  /innsynskravBestilling:
    get:
      operationId: InnsynskravRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - InnsynskravBestilling
    post:
      operationId: InnsynskravRoutes_add
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
      tags:
        - InnsynskravBestilling
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
  /innsynskravBestilling/{id}:
    get:
      operationId: InnsynskravRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
      tags:
        - InnsynskravBestilling
    patch:
      operationId: InnsynskravRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
      tags:
        - InnsynskravBestilling
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestillingUpdate'
    delete:
      operationId: InnsynskravRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
      tags:
        - InnsynskravBestilling
  /innsynskravBestilling/{id}/innsynskrav:
    get:
      operationId: InnsynskravRoutes_listInnsynskrav
      parameters:
        - $ref: '#/components/parameters/InnsynskravBestilling.ListByInnsynskravBestillingParameters.id'
        - $ref: '#/components/parameters/InnsynskravBestilling.ListByInnsynskravBestillingParameters.innsynskravBestillingId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - InnsynskravBestilling
  /innsynskravBestilling/{id}/verify/{secret}:
    patch:
      operationId: InnsynskravRoutes_verify
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
        - name: secret
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
      tags:
        - InnsynskravBestilling
  /journalpost:
    get:
      operationId: JournalpostRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Journalpost.Journalpost'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Journalpost
  /journalpost/{id}:
    get:
      operationId: JournalpostRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journalpost.Journalpost'
      tags:
        - Journalpost
    patch:
      operationId: JournalpostRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journalpost.Journalpost'
      tags:
        - Journalpost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Journalpost.JournalpostUpdate'
    delete:
      operationId: JournalpostRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journalpost.Journalpost'
      tags:
        - Journalpost
  /journalpost/{id}/dokumentbeskrivelse:
    get:
      operationId: JournalpostRoutes_listDokumentbeskrivelse
      parameters:
        - $ref: '#/components/parameters/Journalpost.ListByJournalpostParameters.id'
        - $ref: '#/components/parameters/Journalpost.ListByJournalpostParameters.journalpostId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Journalpost
    post:
      operationId: JournalpostRoutes_addDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Journalpost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
  /journalpost/{id}/dokumentbeskrivelse/{dokumentbeskrivelseId}:
    delete:
      operationId: JournalpostRoutes_deleteDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
        - name: dokumentbeskrivelseId
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Journalpost
  /journalpost/{id}/korrespondansepart:
    get:
      operationId: JournalpostRoutes_listKorrespondansepart
      parameters:
        - $ref: '#/components/parameters/Journalpost.ListByJournalpostParameters.id'
        - $ref: '#/components/parameters/Journalpost.ListByJournalpostParameters.journalpostId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Journalpost
    post:
      operationId: JournalpostRoutes_addKorrespondansepart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
      tags:
        - Journalpost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
  /klasse:
    get:
      operationId: KlasseRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Klasse.Klasse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Klasse
  /klasse/{id}:
    get:
      operationId: KlasseRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klasse.Klasse'
      tags:
        - Klasse
    patch:
      operationId: KlasseRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klasse.Klasse'
      tags:
        - Klasse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Klasse.KlasseUpdate'
    delete:
      operationId: KlasseRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klasse.Klasse'
      tags:
        - Klasse
  /klasse/{id}/klasse:
    get:
      operationId: KlasseRoutes_listKlasse
      parameters:
        - $ref: '#/components/parameters/Klasse.ListByKlasseParameters.id'
        - $ref: '#/components/parameters/Klasse.ListByKlasseParameters.klasseId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Klasse.Klasse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Klasse
    post:
      operationId: KlasseRoutes_addKlasse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klasse.Klasse'
      tags:
        - Klasse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Klasse.Klasse'
  /klasse/{id}/moetemappe:
    get:
      operationId: KlasseRoutes_listMoetemappe
      parameters:
        - $ref: '#/components/parameters/Klasse.ListByKlasseParameters.id'
        - $ref: '#/components/parameters/Klasse.ListByKlasseParameters.klasseId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetemappe.Moetemappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Klasse
  /klasse/{id}/saksmappe:
    get:
      operationId: KlasseRoutes_listSaksmappe
      parameters:
        - $ref: '#/components/parameters/Klasse.ListByKlasseParameters.id'
        - $ref: '#/components/parameters/Klasse.ListByKlasseParameters.klasseId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Saksmappe.Saksmappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Klasse
  /klassifikasjonssystem:
    get:
      operationId: KlassifikasjonssystemRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Klassifikasjonssystem
  /klassifikasjonssystem/{id}:
    get:
      operationId: KlassifikasjonssystemRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
      tags:
        - Klassifikasjonssystem
    patch:
      operationId: KlassifikasjonssystemRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
      tags:
        - Klassifikasjonssystem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Klassifikasjonssystem.KlassifikasjonssystemUpdate'
    delete:
      operationId: KlassifikasjonssystemRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
      tags:
        - Klassifikasjonssystem
  /klassifikasjonssystem/{id}/klasse:
    get:
      operationId: KlassifikasjonssystemRoutes_listKlasse
      parameters:
        - $ref: '#/components/parameters/Klassifikasjonssystem.ListByKlassifikasjonssystemParameters.id'
        - $ref: '#/components/parameters/Klassifikasjonssystem.ListByKlassifikasjonssystemParameters.klassifikasjonssystemId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Klasse.Klasse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Klassifikasjonssystem
    post:
      operationId: KlassifikasjonssystemRoutes_addKlasse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Klasse.Klasse'
      tags:
        - Klassifikasjonssystem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Klasse.Klasse'
  /korrespondansepart:
    get:
      operationId: KorrespondansepartRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Korrespondansepart
  /korrespondansepart/{id}:
    get:
      operationId: KorrespondansepartRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
      tags:
        - Korrespondansepart
    patch:
      operationId: KorrespondansepartRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
      tags:
        - Korrespondansepart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Korrespondansepart.KorrespondansepartUpdate'
    delete:
      operationId: KorrespondansepartRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
      tags:
        - Korrespondansepart
  /lagretSak:
    get:
      operationId: LagretSakRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/LagretSak.LagretSak'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - LagretSak
  /lagretSak/{id}:
    get:
      operationId: LagretSakRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSak.LagretSak'
      tags:
        - LagretSak
    patch:
      operationId: LagretSakRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSak.LagretSak'
      tags:
        - LagretSak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagretSak.LagretSakUpdate'
    delete:
      operationId: LagretSakRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSak.LagretSak'
      tags:
        - LagretSak
  /lagretSoek:
    get:
      operationId: LagretSoekRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/LagretSoek.LagretSoek'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - LagretSoek
  /lagretSoek/{id}:
    get:
      operationId: LagretSoekRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSoek.LagretSoek'
      tags:
        - LagretSoek
    patch:
      operationId: LagretSoekRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSoek.LagretSoek'
      tags:
        - LagretSoek
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LagretSoek.LagretSoekUpdate'
    delete:
      operationId: LagretSoekRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LagretSoek.LagretSoek'
      tags:
        - LagretSoek
  /moetedeltaker:
    get:
      operationId: MoetedeltakerRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetedeltaker.Moetedeltaker'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetedeltaker
  /moetedeltaker/{id}:
    get:
      operationId: MoetedeltakerRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetedeltaker.Moetedeltaker'
      tags:
        - Moetedeltaker
    patch:
      operationId: MoetedeltakerRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetedeltaker.Moetedeltaker'
      tags:
        - Moetedeltaker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetedeltaker.MoetedeltakerUpdate'
    delete:
      operationId: MoetedeltakerRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetedeltaker.Moetedeltaker'
      tags:
        - Moetedeltaker
  /moetedokument:
    get:
      operationId: MoetedokumentRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetedokument.Moetedokument'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetedokument
  /moetedokument/{id}:
    get:
      operationId: MoetedokumentRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetedokument.Moetedokument'
      tags:
        - Moetedokument
    patch:
      operationId: MoetedokumentRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetedokument.Moetedokument'
      tags:
        - Moetedokument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetedokument.MoetedokumentUpdate'
    delete:
      operationId: MoetedokumentRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetedokument.Moetedokument'
      tags:
        - Moetedokument
  /moetedokument/{id}/dokumentbeskrivelse:
    get:
      operationId: MoetedokumentRoutes_listDokumentbeskrivelse
      parameters:
        - $ref: '#/components/parameters/Moetedokument.ListByMoetedokumentParameters.id'
        - $ref: '#/components/parameters/Moetedokument.ListByMoetedokumentParameters.moetedokumentId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetedokument
    post:
      operationId: MoetedokumentRoutes_addDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Moetedokument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
  /moetemappe:
    get:
      operationId: MoetemappeRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetemappe.Moetemappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetemappe
  /moetemappe/{id}:
    get:
      operationId: MoetemappeRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetemappe.Moetemappe'
      tags:
        - Moetemappe
    patch:
      operationId: MoetemappeRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetemappe.Moetemappe'
      tags:
        - Moetemappe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetemappe.MoetemappeUpdate'
    delete:
      operationId: MoetemappeRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetemappe.Moetemappe'
      tags:
        - Moetemappe
  /moetemappe/{id}/moetedokument:
    get:
      operationId: MoetemappeRoutes_listMoetedokument
      parameters:
        - $ref: '#/components/parameters/Moetemappe.ListByMoetemappeParameters.id'
        - $ref: '#/components/parameters/Moetemappe.ListByMoetemappeParameters.moetemappeId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetedokument.Moetedokument'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetemappe
    post:
      operationId: MoetemappeRoutes_addMoetedokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetedokument.Moetedokument'
      tags:
        - Moetemappe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetedokument.Moetedokument'
  /moetemappe/{id}/moetesak:
    get:
      operationId: MoetemappeRoutes_listMoetesak
      parameters:
        - $ref: '#/components/parameters/Moetemappe.ListByMoetemappeParameters.id'
        - $ref: '#/components/parameters/Moetemappe.ListByMoetemappeParameters.moetemappeId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetesak.Moetesak'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetemappe
    post:
      operationId: MoetemappeRoutes_addMoetesak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesak.Moetesak'
      tags:
        - Moetemappe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetesak.Moetesak'
  /moetesak:
    get:
      operationId: MoetesakRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetesak.Moetesak'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetesak
    post:
      operationId: MoetesakRoutes_add
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesak.Moetesak'
      tags:
        - Moetesak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetesak.Moetesak'
  /moetesak/{id}:
    get:
      operationId: MoetesakRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesak.Moetesak'
      tags:
        - Moetesak
    patch:
      operationId: MoetesakRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesak.Moetesak'
      tags:
        - Moetesak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetesak.MoetesakUpdate'
    delete:
      operationId: MoetesakRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesak.Moetesak'
      tags:
        - Moetesak
  /moetesak/{id}/dokumentbeskrivelse:
    get:
      operationId: MoetesakRoutes_listDokumentbeskrivelse
      parameters:
        - $ref: '#/components/parameters/Moetesak.ListByMoetesakParameters.id'
        - $ref: '#/components/parameters/Moetesak.ListByMoetesakParameters.moetesakId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetesak
    post:
      operationId: MoetesakRoutes_addDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Moetesak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
  /moetesak/{id}/utredning:
    get:
      operationId: MoetesakRoutes_getUtredning
      parameters:
        - $ref: '#/components/parameters/Moetesak.GetByMoetesakParameters.id'
        - $ref: '#/components/parameters/Moetesak.GetByMoetesakParameters.moetesakId'
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utredning.Utredning'
      tags:
        - Moetesak
    post:
      operationId: MoetesakRoutes_addUtredning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utredning.Utredning'
      tags:
        - Moetesak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utredning.Utredning'
  /moetesak/{id}/vedtak:
    get:
      operationId: MoetesakRoutes_getVedtak
      parameters:
        - $ref: '#/components/parameters/Moetesak.GetByMoetesakParameters.id'
        - $ref: '#/components/parameters/Moetesak.GetByMoetesakParameters.moetesakId'
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vedtak.Vedtak'
      tags:
        - Moetesak
    post:
      operationId: MoetesakRoutes_addVedtak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vedtak.Vedtak'
      tags:
        - Moetesak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vedtak.Vedtak'
  /moetesaksbeskrivelse:
    get:
      operationId: MoetesaksbeskrivelseRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Moetesaksbeskrivelse
  /moetesaksbeskrivelse/{id}:
    get:
      operationId: MoetesaksbeskrivelseRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
      tags:
        - Moetesaksbeskrivelse
    patch:
      operationId: MoetesaksbeskrivelseRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
      tags:
        - Moetesaksbeskrivelse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moetesaksbeskrivelse.MoetesaksbeskrivelseUpdate'
    delete:
      operationId: MoetesaksbeskrivelseRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
      tags:
        - Moetesaksbeskrivelse
  /saksmappe:
    get:
      operationId: SaksmappeRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Saksmappe.Saksmappe'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Saksmappe
  /saksmappe/{id}:
    get:
      operationId: SaksmappeRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksmappe.Saksmappe'
      tags:
        - Saksmappe
    patch:
      operationId: SaksmappeRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksmappe.Saksmappe'
      tags:
        - Saksmappe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saksmappe.SaksmappeUpdate'
    delete:
      operationId: SaksmappeRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saksmappe.Saksmappe'
      tags:
        - Saksmappe
  /saksmappe/{id}/journalpost:
    get:
      operationId: SaksmappeRoutes_listJournalpost
      parameters:
        - $ref: '#/components/parameters/Saksmappe.ListBySaksmappeParameters.id'
        - $ref: '#/components/parameters/Saksmappe.ListBySaksmappeParameters.saksmappeId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Journalpost.Journalpost'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Saksmappe
    post:
      operationId: SaksmappeRoutes_addJournalpost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journalpost.Journalpost'
      tags:
        - Saksmappe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Journalpost.Journalpost'
  /skjerming:
    get:
      operationId: SkjermingRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Skjerming.Skjerming'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Skjerming
    post:
      operationId: SkjermingRoutes_add
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skjerming.Skjerming'
      tags:
        - Skjerming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skjerming.Skjerming'
  /skjerming/{id}:
    get:
      operationId: SkjermingRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skjerming.Skjerming'
      tags:
        - Skjerming
    patch:
      operationId: SkjermingRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skjerming.Skjerming'
      tags:
        - Skjerming
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skjerming.SkjermingUpdate'
    delete:
      operationId: SkjermingRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skjerming.Skjerming'
      tags:
        - Skjerming
  /tilbakemelding:
    get:
      operationId: TilbakemeldingRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tilbakemelding.Tilbakemelding'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Tilbakemelding
    post:
      operationId: TilbakemeldingRoutes_add
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tilbakemelding.Tilbakemelding'
      tags:
        - Tilbakemelding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tilbakemelding.Tilbakemelding'
  /tilbakemelding/{id}:
    get:
      operationId: TilbakemeldingRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tilbakemelding.Tilbakemelding'
      tags:
        - Tilbakemelding
    patch:
      operationId: TilbakemeldingRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tilbakemelding.Tilbakemelding'
      tags:
        - Tilbakemelding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tilbakemelding.TilbakemeldingUpdate'
    delete:
      operationId: TilbakemeldingRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tilbakemelding.Tilbakemelding'
      tags:
        - Tilbakemelding
  /utredning:
    get:
      operationId: UtredningRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Utredning.Utredning'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Utredning
  /utredning/{id}:
    get:
      operationId: UtredningRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utredning.Utredning'
      tags:
        - Utredning
    patch:
      operationId: UtredningRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utredning.Utredning'
      tags:
        - Utredning
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utredning.UtredningUpdate'
    delete:
      operationId: UtredningRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utredning.Utredning'
      tags:
        - Utredning
  /utredning/{id}/utredningsdokument:
    get:
      operationId: UtredningRoutes_listUtredningsdokument
      parameters:
        - $ref: '#/components/parameters/Utredning.ListByUtredningParameters.id'
        - $ref: '#/components/parameters/Utredning.ListByUtredningParameters.utredningId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Utredning
    post:
      operationId: UtredningRoutes_addUtredningsdokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Utredning
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
  /utredning/{id}/utredningsdokument/{utredningsdokumentId}:
    delete:
      operationId: UtredningRoutes_deleteUtredningsdokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
        - name: utredningsdokumentId
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Utredning
  /vedtak:
    get:
      operationId: VedtakRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vedtak.Vedtak'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Vedtak
  /vedtak/{id}:
    get:
      operationId: VedtakRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vedtak.Vedtak'
      tags:
        - Vedtak
    patch:
      operationId: VedtakRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vedtak.Vedtak'
      tags:
        - Vedtak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vedtak.VedtakUpdate'
    delete:
      operationId: VedtakRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vedtak.Vedtak'
      tags:
        - Vedtak
  /vedtak/{id}/vedtaksdokument:
    get:
      operationId: VedtakRoutes_listVedtaksdokument
      parameters:
        - $ref: '#/components/parameters/Vedtak.ListByVedtakParameters.id'
        - $ref: '#/components/parameters/Vedtak.ListByVedtakParameters.vedtakId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Vedtak
    post:
      operationId: VedtakRoutes_addVedtaksdokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Vedtak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
  /vedtak/{id}/vedtaksdokument/{vedtaksdokumentId}:
    delete:
      operationId: VedtakRoutes_deleteVedtaksdokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
        - name: vedtaksdokumentId
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      tags:
        - Vedtak
  /vedtak/{id}/votering:
    get:
      operationId: VedtakRoutes_listVotering
      parameters:
        - $ref: '#/components/parameters/Vedtak.ListByVedtakParameters.id'
        - $ref: '#/components/parameters/Vedtak.ListByVedtakParameters.vedtakId'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Votering.Votering'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Vedtak
    post:
      operationId: VedtakRoutes_addVotering
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: id
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Votering.Votering'
      tags:
        - Vedtak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Votering.Votering'
  /votering:
    get:
      operationId: VoteringRoutes_list
      description: List all objects.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.ListParameters.expand'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.limit'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.sortOrder'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.startingAfter'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.endingBefore'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.ids'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.externalIds'
        - $ref: '#/components/parameters/QueryParameters.ListParameters.journalenhet'
      responses:
        '200':
          description: Result list
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Votering.Votering'
                    description: A paginated list of items.
                  next:
                    type: string
                    format: uri
                    description: The URL for the next page of items.
                  previous:
                    type: string
                    format: uri
                    description: The URL for the previous page of items.
      tags:
        - Votering
  /votering/{id}:
    get:
      operationId: VoteringRoutes_get
      description: Get an object.
      parameters:
        - $ref: '#/components/parameters/QueryParameters.GetParameters'
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Votering.Votering'
      tags:
        - Votering
    patch:
      operationId: VoteringRoutes_update
      description: Update an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The updated object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Votering.Votering'
      tags:
        - Votering
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Votering.VoteringUpdate'
    delete:
      operationId: VoteringRoutes_delete
      description: Delete an object.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the object.
          schema:
            type: string
            format: id
      responses:
        '200':
          description: The deleted object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Votering.Votering'
      tags:
        - Votering
components:
  parameters:
    Arkiv.ListByArkivParameters.arkivId:
      name: arkivId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Arkiv.ListByArkivParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Arkivdel.ListByArkivdelParameters.arkivdelId:
      name: arkivdelId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Arkivdel.ListByArkivdelParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Bruker.ListByBrukerParameters.brukerId:
      name: brukerId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Bruker.ListByBrukerParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Enhet.ListByEnhetParameters.enhetId:
      name: enhetId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Enhet.ListByEnhetParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    InnsynskravBestilling.ListByInnsynskravBestillingParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    InnsynskravBestilling.ListByInnsynskravBestillingParameters.innsynskravBestillingId:
      name: innsynskravBestillingId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Journalpost.ListByJournalpostParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Journalpost.ListByJournalpostParameters.journalpostId:
      name: journalpostId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Klasse.ListByKlasseParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Klasse.ListByKlasseParameters.klasseId:
      name: klasseId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Klassifikasjonssystem.ListByKlassifikasjonssystemParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Klassifikasjonssystem.ListByKlassifikasjonssystemParameters.klassifikasjonssystemId:
      name: klassifikasjonssystemId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Moetedokument.ListByMoetedokumentParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Moetedokument.ListByMoetedokumentParameters.moetedokumentId:
      name: moetedokumentId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Moetemappe.ListByMoetemappeParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Moetemappe.ListByMoetemappeParameters.moetemappeId:
      name: moetemappeId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Moetesak.GetByMoetesakParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Moetesak.GetByMoetesakParameters.moetesakId:
      name: moetesakId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Moetesak.ListByMoetesakParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Moetesak.ListByMoetesakParameters.moetesakId:
      name: moetesakId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    QueryParameters.GetParameters:
      name: expand
      in: query
      required: false
      description: Specifies which fields in the response should be expanded.
      schema:
        type: array
        items:
          type: string
      explode: false
    QueryParameters.ListParameters.endingBefore:
      name: endingBefore
      in: query
      required: false
      description: A cursor for use in pagination. EndingBefore is a resource ID that defines your place in the list.
      schema:
        type: string
        format: id
      explode: false
    QueryParameters.ListParameters.expand:
      name: expand
      in: query
      required: false
      description: Specifies which fields in the response should be expanded.
      schema:
        type: array
        items:
          type: string
      explode: false
    QueryParameters.ListParameters.externalIds:
      name: externalIds
      in: query
      required: false
      description: A list of external IDs to be returned. If this parameter is used, the other parameters will be ignored.
      schema:
        type: array
        items:
          type: string
      explode: false
    QueryParameters.ListParameters.ids:
      name: ids
      in: query
      required: false
      description: A list of resource IDs to be returned. If this parameter is used, the other parameters will be ignored.
      schema:
        type: array
        items:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      explode: false
    QueryParameters.ListParameters.journalenhet:
      name: journalenhet
      in: query
      required: false
      description: The Journalenhet to filter the result set by.
      schema:
        type: string
        format: id
      explode: false
    QueryParameters.ListParameters.limit:
      name: limit
      in: query
      required: false
      description: A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
      schema:
        type: integer
        default: 25
      explode: false
    QueryParameters.ListParameters.sortOrder:
      name: sortOrder
      in: query
      required: false
      description: The sort order of the result set. The default is ascending.
      schema:
        type: string
        enum:
          - asc
          - desc
      explode: false
    QueryParameters.ListParameters.startingAfter:
      name: startingAfter
      in: query
      required: false
      description: A cursor for use in pagination. StartingAfter is a resource ID that defines your place in the list.
      schema:
        type: string
        format: id
      explode: false
    Saksmappe.ListBySaksmappeParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Saksmappe.ListBySaksmappeParameters.saksmappeId:
      name: saksmappeId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Utredning.ListByUtredningParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Utredning.ListByUtredningParameters.utredningId:
      name: utredningId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
    Vedtak.ListByVedtakParameters.id:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: id
    Vedtak.ListByVedtakParameters.vedtakId:
      name: vedtakId
      in: query
      required: true
      schema:
        type: string
        format: id
      explode: false
  schemas:
    ApiKey.ApiKey:
      type: object
      required:
        - entity
        - secretKey
      properties:
        entity:
          type: string
          enum:
            - ApiKey
          readOnly: true
        name:
          type: string
          description: A name for the API key. This can be used to identify the key, in case you have multiple keys for multiple systems.
        secretKey:
          type: string
          description: The API key used to authenticate requests. This will only be shown once, and we will only store a hashed version.
          readOnly: true
        enhet:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
          description: The Enhet that requests using this key will be associated with.
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: An API key used to authenticate requests to the eInnsyn API.
      x-idPrefix: key
    ApiKey.ApiKeyUpdate:
      type: object
      properties:
        name:
          type: string
          description: A name for the API key. This can be used to identify the key, in case you have multiple keys for multiple systems.
        enhet:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.EnhetUpdate'
          description: The Enhet that requests using this key will be associated with.
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: An API key used to authenticate requests to the eInnsyn API.
      x-idPrefix: key
    Arkiv.Arkiv:
      type: object
      required:
        - entity
        - tittel
      properties:
        entity:
          type: string
          enum:
            - Arkiv
          readOnly: true
        tittel:
          type: string
          description: The title of the archive.
        arkiv:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Arkiv.Arkiv'
          description: The parent archive to which this archive belongs.
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Represents a top-level archive in the Noark structure.
      x-idPrefix: ark
    Arkiv.ArkivUpdate:
      type: object
      properties:
        tittel:
          type: string
          description: The title of the archive.
        arkiv:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Arkiv.ArkivUpdate'
          description: The parent archive to which this archive belongs.
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Represents a top-level archive in the Noark structure.
      x-idPrefix: ark
    Arkiv.ListByArkivParameters:
      type: object
      required:
        - id
        - arkivId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        arkivId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    ArkivBase.ArkivBase:
      type: object
      properties:
        systemId:
          type: string
          format: id
          description: The unique identifier for the resource, given by the user's system.
        journalenhet:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
          description: |-
            The administrative unit that is responsible for the resource. This
            is by default derived from the credentials used to authenticate the
            request on creation, or it can manually be set to an Enhet owned by
            that derived Enhet.
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: Properties shared by all Noark objects
    ArkivBase.ArkivBaseUpdate:
      type: object
      properties:
        systemId:
          type: string
          format: id
          description: The unique identifier for the resource, given by the user's system.
        journalenhet:
          allOf:
            - anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Enhet.EnhetUpdate'
          description: |-
            The administrative unit that is responsible for the resource. This
            is by default derived from the credentials used to authenticate the
            request on creation, or it can manually be set to an Enhet owned by
            that derived Enhet.
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: Properties shared by all Noark objects
    Arkivdel.Arkivdel:
      type: object
      required:
        - entity
        - tittel
        - arkiv
      properties:
        entity:
          type: string
          enum:
            - Arkivdel
          readOnly: true
        tittel:
          type: string
          description: The title of the Arkivdel.
        arkiv:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Arkiv.Arkiv'
          description: The parent Arkiv to which this Arkivdel belongs.
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Arkivdel
      x-idPrefix: arkd
    Arkivdel.ArkivdelUpdate:
      type: object
      properties:
        tittel:
          type: string
          description: The title of the Arkivdel.
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Arkivdel
      x-idPrefix: arkd
    Arkivdel.ListByArkivdelParameters:
      type: object
      required:
        - id
        - arkivdelId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        arkivdelId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Base.Base:
      type: object
      required:
        - id
        - created
        - updated
        - deleted
      properties:
        id:
          type: string
          format: id
          description: The unique identifier for the resource. This is is assigned by the system when the resource is created.
          readOnly: true
        created:
          type: string
          format: date-time
          description: A timestamp of when the resource was created. This field is updated automatically.
          readOnly: true
        updated:
          type: string
          format: date-time
          description: A timestamp of when the resource was last updated. This field is updated automatically.
          readOnly: true
        deleted:
          type: boolean
          description: This field is only present if the resource has been deleted. If present, it will always be `true`.
          readOnly: true
        externalId:
          type: string
          description: An external ID for the resource. This is similar to "systemId", but will be used for legacy IRIs that were used in earlier eInnsyn versions.
    Base.BaseUpdate:
      type: object
      properties:
        externalId:
          type: string
          description: An external ID for the resource. This is similar to "systemId", but will be used for legacy IRIs that were used in earlier eInnsyn versions.
    Behandlingsprotokoll.Behandlingsprotokoll:
      type: object
      required:
        - entity
        - tekstInnhold
        - tekstFormat
      properties:
        entity:
          type: string
          enum:
            - Behandlingsprotokoll
          readOnly: true
        tekstInnhold:
          type: string
        tekstFormat:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Behandlingsprotokoll
      x-idPrefix: bp
    Behandlingsprotokoll.BehandlingsprotokollUpdate:
      type: object
      properties:
        tekstInnhold:
          type: string
        tekstFormat:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Behandlingsprotokoll
      x-idPrefix: bp
    Bruker.Bruker:
      type: object
      required:
        - entity
        - email
        - active
        - password
      properties:
        entity:
          type: string
          enum:
            - Bruker
          readOnly: true
        email:
          type: string
          format: email
        active:
          type: boolean
          readOnly: true
        password:
          type: string
          format: password
        language:
          type: string
          enum:
            - nb
            - nn
            - en
            - se
          default: nb
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: eInnsyn bruker
      x-idPrefix: bru
    Bruker.BrukerUpdate:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        language:
          type: string
          enum:
            - nb
            - nn
            - en
            - se
          default: nb
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: eInnsyn bruker
      x-idPrefix: bru
    Bruker.ListByBrukerParameters:
      type: object
      required:
        - id
        - brukerId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        brukerId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Dokumentbeskrivelse.Dokumentbeskrivelse:
      type: object
      required:
        - entity
        - tittel
        - tittelSensitiv
        - dokumentnummer
        - tilknyttetRegistreringSom
      properties:
        entity:
          type: string
          enum:
            - Dokumentbeskrivelse
          readOnly: true
        tittel:
          type: string
          description: The title of the document, with sensitive information redacted.
        tittelSensitiv:
          type: string
          description: The title of the document, with sensitive information included.
        dokumentnummer:
          type: integer
        dokumenttype:
          type: string
        tilknyttetRegistreringSom:
          type: string
        dokumentobjekt:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentobjekt.Dokumentobjekt'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Dokumentbeskrivelse
      x-idPrefix: db
    Dokumentbeskrivelse.DokumentbeskrivelseUpdate:
      type: object
      properties:
        tittel:
          type: string
          description: The title of the document, with sensitive information redacted.
        tittelSensitiv:
          type: string
          description: The title of the document, with sensitive information included.
        dokumentnummer:
          type: integer
        dokumenttype:
          type: string
        tilknyttetRegistreringSom:
          type: string
        dokumentobjekt:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentobjekt.Dokumentobjekt'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Dokumentbeskrivelse
      x-idPrefix: db
    Dokumentobjekt.Dokumentobjekt:
      type: object
      required:
        - entity
        - referanseDokumentfil
      properties:
        entity:
          type: string
          enum:
            - Dokumentobjekt
          readOnly: true
        referanseDokumentfil:
          type: string
          format: uri
        format:
          type: string
        sjekksum:
          type: string
        sjekksumAlgoritme:
          type: string
        dokumentbeskrivelse:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      x-idPrefix: do
    Dokumentobjekt.DokumentobjektUpdate:
      type: object
      properties:
        referanseDokumentfil:
          type: string
          format: uri
        format:
          type: string
        sjekksum:
          type: string
        sjekksumAlgoritme:
          type: string
        dokumentbeskrivelse:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Dokumentbeskrivelse.DokumentbeskrivelseUpdate'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      x-idPrefix: do
    Enhet.Enhet:
      type: object
      required:
        - entity
        - navn
        - orgnummer
        - kontaktpunktEpost
        - innsynskravEpost
        - enhetstype
      properties:
        entity:
          type: string
          enum:
            - Enhet
          readOnly: true
        navn:
          type: string
        navnNynorsk:
          type: string
        navnEngelsk:
          type: string
        navnSami:
          type: string
        orgnummer:
          type: string
          pattern: ^[0-9]{9}$
        enhetskode:
          type: string
        kontaktpunktAdresse:
          type: string
        kontaktpunktEpost:
          type: string
          format: email
        kontaktpunktTelefon:
          type: string
        innsynskravEpost:
          type: string
          format: email
        enhetstype:
          type: string
          enum:
            - ADMINISTRATIVENHET
            - AVDELING
            - BYDEL
            - DUMMYENHET
            - FYLKE
            - KOMMUNE
            - ORGAN
            - SEKSJON
            - UTVALG
            - VIRKSOMHET
        avsluttetDato:
          type: string
          format: date
        skjult:
          type: boolean
        eFormidling:
          type: boolean
        teknisk:
          type: boolean
        skalKonvertereId:
          type: boolean
        skalMottaKvittering:
          type: boolean
        visToppnode:
          type: boolean
        orderXmlVersjon:
          type: integer
        underenhet:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Enhet.Enhet'
        handteresAv:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
        parent:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: eInnsyn Enhet
      x-idPrefix: enh
    Enhet.EnhetUpdate:
      type: object
      properties:
        navn:
          type: string
        navnNynorsk:
          type: string
        navnEngelsk:
          type: string
        navnSami:
          type: string
        orgnummer:
          type: string
          pattern: ^[0-9]{9}$
        enhetskode:
          type: string
        kontaktpunktAdresse:
          type: string
        kontaktpunktEpost:
          type: string
          format: email
        kontaktpunktTelefon:
          type: string
        innsynskravEpost:
          type: string
          format: email
        enhetstype:
          type: string
          enum:
            - ADMINISTRATIVENHET
            - AVDELING
            - BYDEL
            - DUMMYENHET
            - FYLKE
            - KOMMUNE
            - ORGAN
            - SEKSJON
            - UTVALG
            - VIRKSOMHET
        avsluttetDato:
          type: string
          format: date
        skjult:
          type: boolean
        eFormidling:
          type: boolean
        teknisk:
          type: boolean
        skalKonvertereId:
          type: boolean
        skalMottaKvittering:
          type: boolean
        visToppnode:
          type: boolean
        orderXmlVersjon:
          type: integer
        underenhet:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Enhet.Enhet'
        handteresAv:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.EnhetUpdate'
        parent:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.EnhetUpdate'
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: eInnsyn Enhet
      x-idPrefix: enh
    Enhet.ListByEnhetParameters:
      type: object
      required:
        - id
        - enhetId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        enhetId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Identifikator.Identifikator:
      type: object
      required:
        - entity
        - navn
        - identifikator
        - initialer
        - epostadresse
      properties:
        entity:
          type: string
          enum:
            - Identifikator
          readOnly: true
        navn:
          type: string
        identifikator:
          type: string
        initialer:
          type: string
        epostadresse:
          type: string
          format: email
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Identifikator
      x-idPrefix: ide
    Identifikator.IdentifikatorUpdate:
      type: object
      properties:
        navn:
          type: string
        identifikator:
          type: string
        initialer:
          type: string
        epostadresse:
          type: string
          format: email
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Identifikator
      x-idPrefix: ide
    Innsynskrav.Innsynskrav:
      type: object
      required:
        - entity
        - journalpost
      properties:
        entity:
          type: string
          enum:
            - Innsynskrav
          readOnly: true
        innsynskravBestilling:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestilling'
        journalpost:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Journalpost.Journalpost'
        enhet:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
        email:
          type: string
          format: email
          readOnly: true
        sent:
          type: string
          format: date-time
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: Innsynskrav
      x-idPrefix: ikd
    Innsynskrav.InnsynskravUpdate:
      type: object
      properties:
        innsynskravBestilling:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/InnsynskravBestilling.InnsynskravBestillingUpdate'
        journalpost:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Journalpost.JournalpostUpdate'
        enhet:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.EnhetUpdate'
        sent:
          type: string
          format: date-time
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: Innsynskrav
      x-idPrefix: ikd
    Innsynskrav.ListByInnsynskravParameters:
      type: object
      required:
        - id
        - innsynskravId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        innsynskravId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    InnsynskravBestilling.InnsynskravBestilling:
      type: object
      required:
        - entity
        - email
        - innsynskrav
      properties:
        entity:
          type: string
          enum:
            - Innsynskrav
          readOnly: true
        email:
          type: string
          format: email
        innsynskrav:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
        verified:
          type: boolean
        bruker:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Bruker.Bruker'
        language:
          type: string
          enum:
            - nb
            - nn
            - en
            - se
          default: nb
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: Innsynskrav
      x-idPrefix: ik
    InnsynskravBestilling.InnsynskravBestillingUpdate:
      type: object
      properties:
        email:
          type: string
          format: email
        innsynskrav:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Innsynskrav.Innsynskrav'
        verified:
          type: boolean
        bruker:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Bruker.BrukerUpdate'
        language:
          type: string
          enum:
            - nb
            - nn
            - en
            - se
          default: nb
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: Innsynskrav
      x-idPrefix: ik
    InnsynskravBestilling.ListByInnsynskravBestillingParameters:
      type: object
      required:
        - id
        - innsynskravBestillingId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        innsynskravBestillingId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Journalpost.Journalpost:
      type: object
      required:
        - entity
        - journalaar
        - journalsekvensnummer
        - journalpostnummer
        - journalposttype
        - journaldato
        - administrativEnhet
        - administrativEnhetObjekt
        - saksmappe
      properties:
        entity:
          type: string
          enum:
            - Journalpost
          readOnly: true
        journalaar:
          type: integer
          minimum: 1900
        journalsekvensnummer:
          type: integer
          minimum: 0
        journalpostnummer:
          type: integer
          minimum: 0
        journalposttype:
          type: string
          enum:
            - inngaaende_dokument
            - utgaaende_dokument
            - organinternt_dokument_uten_oppfoelging
            - organinternt_dokument_for_oppfoelging
            - saksframlegg
            - sakskart
            - moeteprotokoll
            - moetebok
            - ukjent
        journaldato:
          type: string
          format: date
        dokumentetsDato:
          type: string
          format: date
        skjerming:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Skjerming.Skjerming'
        legacyJournalposttype:
          type: string
        legacyFoelgsakenReferanse:
          type: array
          items:
            type: string
        administrativEnhet:
          type: string
          readOnly: true
        administrativEnhetObjekt:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
          readOnly: true
        saksmappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Saksmappe.Saksmappe'
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/Registrering.Registrering'
      description: Journalpost
      x-idPrefix: jp
    Journalpost.JournalpostUpdate:
      type: object
      properties:
        journalaar:
          type: integer
          minimum: 1900
        journalsekvensnummer:
          type: integer
          minimum: 0
        journalpostnummer:
          type: integer
          minimum: 0
        journalposttype:
          type: string
          enum:
            - inngaaende_dokument
            - utgaaende_dokument
            - organinternt_dokument_uten_oppfoelging
            - organinternt_dokument_for_oppfoelging
            - saksframlegg
            - sakskart
            - moeteprotokoll
            - moetebok
            - ukjent
        journaldato:
          type: string
          format: date
        dokumentetsDato:
          type: string
          format: date
        skjerming:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Skjerming.SkjermingUpdate'
        legacyJournalposttype:
          type: string
        legacyFoelgsakenReferanse:
          type: array
          items:
            type: string
      allOf:
        - $ref: '#/components/schemas/Registrering.RegistreringUpdate'
      description: Journalpost
      x-idPrefix: jp
    Journalpost.ListByJournalpostParameters:
      type: object
      required:
        - id
        - journalpostId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        journalpostId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Klasse.Klasse:
      type: object
      required:
        - entity
        - tittel
      properties:
        entity:
          type: string
          enum:
            - Klasse
          readOnly: true
        tittel:
          type: string
          description: The title of the class.
        klassifikasjonssystem:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Klassifikasjonssystem.Klassifikasjonssystem'
          description: An optional parent klassifikasjonssystem
        klasse:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Klasse.Klasse'
          description: An optional parent klasse
        arkivdel:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Arkivdel.Arkivdel'
          description: An optional parent arkivdel (non-standard field, due to legacy data)
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Klasse
      x-idPrefix: kla
    Klasse.KlasseUpdate:
      type: object
      properties:
        tittel:
          type: string
          description: The title of the class.
        klassifikasjonssystem:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Klassifikasjonssystem.KlassifikasjonssystemUpdate'
          description: An optional parent klassifikasjonssystem
        klasse:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Klasse.KlasseUpdate'
          description: An optional parent klasse
        arkivdel:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Arkivdel.ArkivdelUpdate'
          description: An optional parent arkivdel (non-standard field, due to legacy data)
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Klasse
      x-idPrefix: kla
    Klasse.ListByKlasseParameters:
      type: object
      required:
        - id
        - klasseId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        klasseId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Klassifikasjonssystem.Klassifikasjonssystem:
      type: object
      required:
        - entity
        - tittel
        - arkivdel
      properties:
        entity:
          type: string
          enum:
            - Klassifikasjonssystem
          readOnly: true
        tittel:
          type: string
        arkivdel:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Arkivdel.Arkivdel'
          description: The parent arkivdel.
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Klassifikasjonssystem
      x-idPrefix: ksys
    Klassifikasjonssystem.KlassifikasjonssystemUpdate:
      type: object
      properties:
        tittel:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Klassifikasjonssystem
      x-idPrefix: ksys
    Klassifikasjonssystem.ListByKlassifikasjonssystemParameters:
      type: object
      required:
        - id
        - klassifikasjonssystemId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        klassifikasjonssystemId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Korrespondansepart.Korrespondansepart:
      type: object
      required:
        - entity
        - korrespondansepartNavn
        - korrespondansepartNavnSensitiv
        - korrespondanseparttype
      properties:
        entity:
          type: string
          enum:
            - Korrespondansepart
          readOnly: true
        korrespondansepartNavn:
          type: string
          description: The name of the Korrespondansepart, with sensitive parts redacted.
        korrespondansepartNavnSensitiv:
          type: string
          description: The name of the Korrespondansepart, with all parts included.
        korrespondanseparttype:
          type: string
        saksbehandler:
          type: string
        epostadresse:
          type: string
        postnummer:
          type: string
        erBehandlingsansvarlig:
          type: boolean
        administrativEnhet:
          type: string
          description: The code for the administrative Enhet associated with this Korrespondansepart.
        journalpost:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Journalpost.Journalpost'
          description: The Journalpost this Korrespondansepart is associated with, if any.
          readOnly: true
        saksmappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Saksmappe.Saksmappe'
          description: The Saksmappe this Korrespondansepart is associated with, if any.
          readOnly: true
        moetesak:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesak.Moetesak'
          description: The Moetesak this Korrespondansepart is associated with, if any.
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Korrespondansepart
      x-idPrefix: kp
    Korrespondansepart.KorrespondansepartUpdate:
      type: object
      properties:
        korrespondansepartNavn:
          type: string
          description: The name of the Korrespondansepart, with sensitive parts redacted.
        korrespondansepartNavnSensitiv:
          type: string
          description: The name of the Korrespondansepart, with all parts included.
        korrespondanseparttype:
          type: string
        saksbehandler:
          type: string
        epostadresse:
          type: string
        postnummer:
          type: string
        erBehandlingsansvarlig:
          type: boolean
        administrativEnhet:
          type: string
          description: The code for the administrative Enhet associated with this Korrespondansepart.
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Korrespondansepart
      x-idPrefix: kp
    LagretSak.LagretSak:
      type: object
      required:
        - entity
        - bruker
      properties:
        entity:
          type: string
          enum:
            - LagretSak
          readOnly: true
        bruker:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Bruker.Bruker'
          description: The bruker that has saved this sak. This will be set to the authenticated user.
          readOnly: true
        saksmappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Saksmappe.Saksmappe'
          description: The saksmappe that has been saved.
        moetemappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.Moetemappe'
          description: The moetemappe that has been saved.
        subscribe:
          type: boolean
          description: Specifies whether the user wants to receive notifications about this sak.
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: LagretSak
      x-idPrefix: lsak
    LagretSak.LagretSakUpdate:
      type: object
      properties:
        saksmappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Saksmappe.SaksmappeUpdate'
          description: The saksmappe that has been saved.
        moetemappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.MoetemappeUpdate'
          description: The moetemappe that has been saved.
        subscribe:
          type: boolean
          description: Specifies whether the user wants to receive notifications about this sak.
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: LagretSak
      x-idPrefix: lsak
    LagretSoek.LagretSoek:
      type: object
      required:
        - entity
      properties:
        entity:
          type: string
          enum:
            - LagretSoek
          readOnly: true
        bruker:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Bruker.Bruker'
        label:
          type: string
        legacyQuery:
          type: string
        subscribe:
          type: boolean
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: LagretSoek
      x-idPrefix: lsoek
    LagretSoek.LagretSoekUpdate:
      type: object
      properties:
        bruker:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Bruker.BrukerUpdate'
        label:
          type: string
        legacyQuery:
          type: string
        subscribe:
          type: boolean
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: LagretSoek
      x-idPrefix: lsoek
    Mappe.Mappe:
      type: object
      required:
        - offentligTittel
        - offentligTittelSensitiv
      properties:
        offentligTittel:
          type: string
          description: The title of the Mappe, with sensitive information redacted.
        offentligTittelSensitiv:
          type: string
          description: The title of the Mappe, with sensitive information included.
        beskrivelse:
          type: string
        noekkelord:
          type: string
        publisertDato:
          type: string
          format: date-time
          description: The date the resource was published. This field is updated automatically, but can be set manually by admins.
        oppdatertDato:
          type: string
          format: date-time
          description: The date the resource was last updated. This field is updated automatically, but can be set manually by admins.
        saksmappe:
          allOf:
            - anyOf:
                - type: string
                  format: id
                  description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
                - $ref: '#/components/schemas/Saksmappe.Saksmappe'
          description: If this Mappe is the child of a Saksmappe, this field will contain the parent Saksmappe.
          readOnly: true
        moetemappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.Moetemappe'
          description: If this Mappe is the child of a Moetemappe, this field will contain the parent Moetemappe.
          readOnly: true
        arkivdel:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Arkivdel.Arkivdel'
          description: If this Mappe is not a child of a Saksmappe or Moetemappe, this field will contain the parent Arkivdel.
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Mappe
    Mappe.MappeUpdate:
      type: object
      properties:
        offentligTittel:
          type: string
          description: The title of the Mappe, with sensitive information redacted.
        offentligTittelSensitiv:
          type: string
          description: The title of the Mappe, with sensitive information included.
        beskrivelse:
          type: string
        noekkelord:
          type: string
        publisertDato:
          type: string
          format: date-time
          description: The date the resource was published. This field is updated automatically, but can be set manually by admins.
        oppdatertDato:
          type: string
          format: date-time
          description: The date the resource was last updated. This field is updated automatically, but can be set manually by admins.
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Mappe
    Moetedeltaker.Moetedeltaker:
      type: object
      required:
        - entity
        - moetedeltakerNavn
      properties:
        entity:
          type: string
          enum:
            - Moetedeltaker
          readOnly: true
        moetedeltakerNavn:
          type: string
        moetedeltakerFunksjon:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Moetedeltaker
      x-idPrefix: md
    Moetedeltaker.MoetedeltakerUpdate:
      type: object
      properties:
        moetedeltakerNavn:
          type: string
        moetedeltakerFunksjon:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Moetedeltaker
      x-idPrefix: md
    Moetedokument.ListByMoetedokumentParameters:
      type: object
      required:
        - id
        - moetedokumentId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        moetedokumentId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Moetedokument.Moetedokument:
      type: object
      required:
        - entity
        - moetedokumenttype
      properties:
        entity:
          type: string
          enum:
            - Moetedokument
          readOnly: true
        moetedokumenttype:
          type: string
        saksbehandler:
          type: string
        saksbehandlerSensitiv:
          type: string
        moetemappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.Moetemappe'
      allOf:
        - $ref: '#/components/schemas/Registrering.Registrering'
      description: Moetedokument
      x-idPrefix: mdok
    Moetedokument.MoetedokumentUpdate:
      type: object
      properties:
        moetedokumenttype:
          type: string
        saksbehandler:
          type: string
        saksbehandlerSensitiv:
          type: string
        moetemappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.MoetemappeUpdate'
      allOf:
        - $ref: '#/components/schemas/Registrering.RegistreringUpdate'
      description: Moetedokument
      x-idPrefix: mdok
    Moetemappe.ListByMoetemappeParameters:
      type: object
      required:
        - id
        - moetemappeId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        moetemappeId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Moetemappe.Moetemappe:
      type: object
      required:
        - entity
        - moetenummer
        - utvalg
        - utvalgObjekt
        - moetedato
      properties:
        entity:
          type: string
          enum:
            - Moetemappe
          readOnly: true
        moetenummer:
          type: string
        utvalg:
          type: string
        utvalgObjekt:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
          readOnly: true
        moetedato:
          type: string
          format: date-time
        moetested:
          type: string
        videoLink:
          type: string
          maxLength: 5000
        referanseForrigeMoete:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.Moetemappe'
        referanseNesteMoete:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.Moetemappe'
        moetedokument:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Moetedokument.Moetedokument'
        moetesak:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Moetesak.Moetesak'
      allOf:
        - $ref: '#/components/schemas/Mappe.Mappe'
      description: Moetemappe
      x-idPrefix: mm
    Moetemappe.MoetemappeUpdate:
      type: object
      properties:
        moetenummer:
          type: string
        utvalg:
          type: string
        moetedato:
          type: string
          format: date-time
        moetested:
          type: string
        videoLink:
          type: string
          maxLength: 5000
        referanseForrigeMoete:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.MoetemappeUpdate'
        referanseNesteMoete:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.MoetemappeUpdate'
        moetedokument:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Moetedokument.Moetedokument'
        moetesak:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Moetesak.Moetesak'
      allOf:
        - $ref: '#/components/schemas/Mappe.MappeUpdate'
      description: Moetemappe
      x-idPrefix: mm
    Moetesak.ListByMoetesakParameters:
      type: object
      required:
        - id
        - moetesakId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        moetesakId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Moetesak.Moetesak:
      type: object
      required:
        - entity
        - moetesakstype
        - moetesaksaar
        - moetesakssekvensnummer
        - utvalgObjekt
      properties:
        entity:
          type: string
          enum:
            - Moetesak
          readOnly: true
        moetesakstype:
          type: string
          enum:
            - moete
            - politisk
            - delegert
            - interpellasjon
            - godkjenning
            - orientering
            - referat
            - annet
        moetesaksaar:
          type: integer
          minimum: 1900
        moetesakssekvensnummer:
          type: integer
          minimum: 0
        utvalg:
          type: string
        utvalgObjekt:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
          readOnly: true
        videoLink:
          type: string
        utredning:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Utredning.Utredning'
        innstilling:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
        vedtak:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Vedtak.Vedtak'
        moetemappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.Moetemappe'
        legacyMoetesakstype:
          type: string
        legacyReferanseTilMoetesak:
          type: string
      allOf:
        - $ref: '#/components/schemas/Registrering.Registrering'
      description: Moetesak
      x-idPrefix: ms
    Moetesak.MoetesakUpdate:
      type: object
      properties:
        moetesakstype:
          type: string
          enum:
            - moete
            - politisk
            - delegert
            - interpellasjon
            - godkjenning
            - orientering
            - referat
            - annet
        moetesaksaar:
          type: integer
          minimum: 1900
        moetesakssekvensnummer:
          type: integer
          minimum: 0
        utvalg:
          type: string
        videoLink:
          type: string
        utredning:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Utredning.UtredningUpdate'
        innstilling:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.MoetesaksbeskrivelseUpdate'
        vedtak:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Vedtak.VedtakUpdate'
        moetemappe:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetemappe.MoetemappeUpdate'
        legacyMoetesakstype:
          type: string
        legacyReferanseTilMoetesak:
          type: string
      allOf:
        - $ref: '#/components/schemas/Registrering.RegistreringUpdate'
      description: Moetesak
      x-idPrefix: ms
    Moetesaksbeskrivelse.Moetesaksbeskrivelse:
      type: object
      required:
        - entity
        - tekstInnhold
        - tekstFormat
      properties:
        entity:
          type: string
          enum:
            - Moetesaksbeskrivelse
          readOnly: true
        tekstInnhold:
          type: string
        tekstFormat:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Moetesaksbeskrivelse
      x-idPrefix: msb
    Moetesaksbeskrivelse.MoetesaksbeskrivelseUpdate:
      type: object
      properties:
        tekstInnhold:
          type: string
        tekstFormat:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Moetesaksbeskrivelse
      x-idPrefix: msb
    QueryParameters.FilterParameters:
      type: object
      properties:
        query:
          type: string
          description: A query string to filter by. Quotes can be used to search for exact matches or phrases. Words can be excluded by prefixing them with a minus sign.
        administrativEnhet:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to filter by. This will also match subenhets.
        administrativEnhetExact:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to filter by. This will only match the specified enhets, not subenhets.
        excludeAdministrativEnhet:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to exclude from the result set. This will also exclude subenhets.
        excludeAdministrativEnhetExact:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to exclude from the result set. This will only exclude the specified enhets, not subenhets.
        publisertDatoBefore:
          type: string
          format: date-time
          description: Filter by the published date of the document.
        publisertDatoAfter:
          type: string
          format: date-time
          description: Filter by the published date of the document.
        oppdatertDatoBefore:
          type: string
          format: date-time
          description: Filter by the updated date of the document.
        oppdatertDatoAfter:
          type: string
          format: date-time
          description: Filter by the updated date of the document.
        moetedatoBefore:
          type: string
          format: date-time
          description: Filter by the date of a meeting.
        moetedatoAfter:
          type: string
          format: date-time
          description: Filter by the date of a meeting.
        entity:
          type: string
          enum:
            - Journalpost
            - Moetemappe
            - Moetesak
            - Saksmappe
          description: Filter by the entity type.
    QueryParameters.ListParameters:
      type: object
      properties:
        expand:
          type: array
          items:
            type: string
          description: Specifies which fields in the response should be expanded.
        limit:
          type: integer
          description: A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
          default: 25
        sortOrder:
          type: string
          enum:
            - asc
            - desc
          description: The sort order of the result set. The default is ascending.
        startingAfter:
          type: string
          format: id
          description: A cursor for use in pagination. StartingAfter is a resource ID that defines your place in the list.
        endingBefore:
          type: string
          format: id
          description: A cursor for use in pagination. EndingBefore is a resource ID that defines your place in the list.
        ids:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of resource IDs to be returned. If this parameter is used, the other parameters will be ignored.
        externalIds:
          type: array
          items:
            type: string
          description: A list of external IDs to be returned. If this parameter is used, the other parameters will be ignored.
        journalenhet:
          type: string
          format: id
          description: The Journalenhet to filter the result set by.
    QueryParameters.SearchParameters:
      type: object
      properties:
        query:
          type: string
          description: A query string to filter by. Quotes can be used to search for exact matches or phrases. Words can be excluded by prefixing them with a minus sign.
        administrativEnhet:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to filter by. This will also match subenhets.
        administrativEnhetExact:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to filter by. This will only match the specified enhets, not subenhets.
        excludeAdministrativEnhet:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to exclude from the result set. This will also exclude subenhets.
        excludeAdministrativEnhetExact:
          type: array
          items:
            type: string
            format: id
            description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
          description: A list of enhet IDs to exclude from the result set. This will only exclude the specified enhets, not subenhets.
        publisertDatoBefore:
          type: string
          format: date-time
          description: Filter by the published date of the document.
        publisertDatoAfter:
          type: string
          format: date-time
          description: Filter by the published date of the document.
        oppdatertDatoBefore:
          type: string
          format: date-time
          description: Filter by the updated date of the document.
        oppdatertDatoAfter:
          type: string
          format: date-time
          description: Filter by the updated date of the document.
        moetedatoBefore:
          type: string
          format: date-time
          description: Filter by the date of a meeting.
        moetedatoAfter:
          type: string
          format: date-time
          description: Filter by the date of a meeting.
        entity:
          type: string
          enum:
            - Journalpost
            - Moetemappe
            - Moetesak
            - Saksmappe
          description: Filter by the entity type.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Registrering.Registrering:
      type: object
      required:
        - offentligTittel
        - offentligTittelSensitiv
      properties:
        offentligTittel:
          type: string
          description: The title of the resource, with sensitive information redacted.
        offentligTittelSensitiv:
          type: string
          description: The title of the resource, with sensitive information included.
        beskrivelse:
          type: string
        publisertDato:
          type: string
          format: date-time
          description: The date the resource was published. This field is updated automatically, but can be set manually by admins.
        oppdatertDato:
          type: string
          format: date-time
          description: The date the resource was last updated. This field is updated automatically, but can be set manually by admins.
        korrespondansepart:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
        dokumentbeskrivelse:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Registrering
    Registrering.RegistreringUpdate:
      type: object
      properties:
        offentligTittel:
          type: string
          description: The title of the resource, with sensitive information redacted.
        offentligTittelSensitiv:
          type: string
          description: The title of the resource, with sensitive information included.
        beskrivelse:
          type: string
        publisertDato:
          type: string
          format: date-time
          description: The date the resource was published. This field is updated automatically, but can be set manually by admins.
        oppdatertDato:
          type: string
          format: date-time
          description: The date the resource was last updated. This field is updated automatically, but can be set manually by admins.
        korrespondansepart:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Korrespondansepart.Korrespondansepart'
        dokumentbeskrivelse:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Registrering
    Responses.ErrorResponse:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/Responses.ErrorResponseBody'
    Responses.ErrorResponseBody:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
        message:
          type: string
    Responses.ValidationErrorResponseBody:
      type: object
      required:
        - fieldError
      properties:
        fieldError:
          type: array
          items:
            type: object
            properties:
              fieldName:
                type: string
              value:
                type: string
              message:
                type: string
            required:
              - fieldName
      allOf:
        - $ref: '#/components/schemas/Responses.ErrorResponseBody'
    Saksmappe.ListBySaksmappeParameters:
      type: object
      required:
        - id
        - saksmappeId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        saksmappeId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Saksmappe.Saksmappe:
      type: object
      required:
        - entity
        - saksaar
        - sakssekvensnummer
        - administrativEnhetObjekt
      properties:
        entity:
          type: string
          enum:
            - Saksmappe
          readOnly: true
        saksaar:
          type: integer
          minimum: 1900
        sakssekvensnummer:
          type: integer
          minimum: 0
        saksnummer:
          type: string
        saksdato:
          type: string
          format: date
        journalpost:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Journalpost.Journalpost'
        administrativEnhet:
          type: string
          description: A code for the administrative Enhet associated with this Saksmappe.
        administrativEnhetObjekt:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Enhet.Enhet'
          description: |-
            The adminsistrative Enhet associated with this Saksmappe. This is derived from the code given in `administrativEnhet`.
            If no `administrativEnhet` is given, or the code is not found, the `journalenhet` of the authenticated user will be used.
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/Mappe.Mappe'
      description: Saksmappe
      x-idPrefix: sm
    Saksmappe.SaksmappeUpdate:
      type: object
      properties:
        saksaar:
          type: integer
          minimum: 1900
        sakssekvensnummer:
          type: integer
          minimum: 0
        saksnummer:
          type: string
        saksdato:
          type: string
          format: date
        journalpost:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Journalpost.Journalpost'
        administrativEnhet:
          type: string
          description: A code for the administrative Enhet associated with this Saksmappe.
      allOf:
        - $ref: '#/components/schemas/Mappe.MappeUpdate'
      description: Saksmappe
      x-idPrefix: sm
    Skjerming.Skjerming:
      type: object
      required:
        - entity
        - tilgangsrestriksjon
      properties:
        entity:
          type: string
          enum:
            - Skjerming
          readOnly: true
        tilgangsrestriksjon:
          type: string
        skjermingshjemmel:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Skjerming
      x-idPrefix: skj
    Skjerming.SkjermingUpdate:
      type: object
      properties:
        tilgangsrestriksjon:
          type: string
        skjermingshjemmel:
          type: string
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Skjerming
      x-idPrefix: skj
    Tilbakemelding.Tilbakemelding:
      type: object
      required:
        - entity
      properties:
        entity:
          type: string
          enum:
            - Tilbakemelding
          readOnly: true
        messageFromUser:
          type: string
        path:
          type: string
        referer:
          type: string
        userAgent:
          type: string
        screenHeight:
          type: integer
        screenWidth:
          type: integer
        docHeight:
          type: integer
        docWidth:
          type: integer
        winHeight:
          type: integer
        winWidth:
          type: integer
        scrollX:
          type: integer
        scrollY:
          type: integer
        userSatisfied:
          type: boolean
        handledByAdmin:
          type: boolean
        adminComment:
          type: string
      allOf:
        - $ref: '#/components/schemas/Base.Base'
      description: Tilbakemelding
      x-idPrefix: tbm
    Tilbakemelding.TilbakemeldingUpdate:
      type: object
      properties:
        messageFromUser:
          type: string
        path:
          type: string
        referer:
          type: string
        userAgent:
          type: string
        screenHeight:
          type: integer
        screenWidth:
          type: integer
        docHeight:
          type: integer
        docWidth:
          type: integer
        winHeight:
          type: integer
        winWidth:
          type: integer
        scrollX:
          type: integer
        scrollY:
          type: integer
        userSatisfied:
          type: boolean
        handledByAdmin:
          type: boolean
        adminComment:
          type: string
      allOf:
        - $ref: '#/components/schemas/Base.BaseUpdate'
      description: Tilbakemelding
      x-idPrefix: tbm
    Utredning.ListByUtredningParameters:
      type: object
      required:
        - id
        - utredningId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        utredningId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Utredning.Utredning:
      type: object
      required:
        - entity
        - saksbeskrivelse
        - innstilling
      properties:
        entity:
          type: string
          enum:
            - Utredning
          readOnly: true
        saksbeskrivelse:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
        innstilling:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
        utredningsdokument:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Utredning
      x-idPrefix: utr
    Utredning.UtredningUpdate:
      type: object
      properties:
        saksbeskrivelse:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.MoetesaksbeskrivelseUpdate'
        innstilling:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.MoetesaksbeskrivelseUpdate'
        utredningsdokument:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Utredning
      x-idPrefix: utr
    Vedtak.ListByVedtakParameters:
      type: object
      required:
        - id
        - vedtakId
      properties:
        id:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
        vedtakId:
          type: string
          format: id
          description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
      allOf:
        - $ref: '#/components/schemas/QueryParameters.ListParameters'
    Vedtak.Vedtak:
      type: object
      required:
        - entity
        - vedtakstekst
        - dato
      properties:
        entity:
          type: string
          enum:
            - Vedtak
          readOnly: true
        vedtakstekst:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.Moetesaksbeskrivelse'
        votering:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Votering.Votering'
        behandlingsprotokoll:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Behandlingsprotokoll.Behandlingsprotokoll'
        vedtaksdokument:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
        dato:
          type: string
          format: date
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Vedtak
      x-idPrefix: ved
    Vedtak.VedtakUpdate:
      type: object
      properties:
        vedtakstekst:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetesaksbeskrivelse.MoetesaksbeskrivelseUpdate'
        votering:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Votering.Votering'
        behandlingsprotokoll:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Behandlingsprotokoll.BehandlingsprotokollUpdate'
        vedtaksdokument:
          type: array
          items:
            anyOf:
              - type: string
                format: id
                description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
              - $ref: '#/components/schemas/Dokumentbeskrivelse.Dokumentbeskrivelse'
        dato:
          type: string
          format: date
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Vedtak
      x-idPrefix: ved
    Votering.Votering:
      type: object
      required:
        - entity
        - moetedeltaker
        - stemme
      properties:
        entity:
          type: string
          enum:
            - Votering
          readOnly: true
        moetedeltaker:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetedeltaker.Moetedeltaker'
        stemme:
          type: string
          enum:
            - Ja
            - Nei
            - Blankt
        representerer:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Identifikator.Identifikator'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBase'
      description: Votering
      x-idPrefix: vot
    Votering.VoteringUpdate:
      type: object
      properties:
        moetedeltaker:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Moetedeltaker.MoetedeltakerUpdate'
        stemme:
          type: string
          enum:
            - Ja
            - Nei
            - Blankt
        representerer:
          anyOf:
            - type: string
              format: id
              description: An eInnsynId is a Base32 encoded UUID, with a prefix to indicate the type of resource. All objects in eInnsyn has an eInnsynId.
            - $ref: '#/components/schemas/Identifikator.IdentifikatorUpdate'
      allOf:
        - $ref: '#/components/schemas/ArkivBase.ArkivBaseUpdate'
      description: Votering
      x-idPrefix: vot
    eInnsynId:
      type: string
