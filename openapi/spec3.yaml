openapi: "3.0.0"

info:
  title: eInnsyn REST API
  version: "3.0"

servers:
  - url: https://api.einnsyn.no/

tags:
  - name: Arkiv
  - name: Arkivdel
  - name: Bruker
  - name: Dokumentbeskrivelse
  - name: Dokumentobjekt
  - name: Enhet
  - name: Innsynskrav
  - name: InnsynskravDel
  - name: Journalpost
  - name: Klasse
  - name: Korrespondansepart
  - name: Moetemappe
  - name: Saksmappe
  - name: Skjerming

paths:
  /arkiv/{id}:
    get:
      description: Get a single Arkiv.
      tags:
        - Arkiv
      operationId: GetArkiv
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Arkiv
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Arkiv"
    put:
      description: Update a single Arkiv.
      tags:
        - Arkiv
      operationId: PutArkiv
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Arkiv
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Arkiv"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Arkiv"
    delete:
      description: Delete a single Arkiv.
      tags:
        - Arkiv
      operationId: DeleteArkiv
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Arkiv
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Arkiv"

  /arkivdel/{id}:
    get:
      description: Get a single Arkivdel.
      tags:
        - Arkivdel
      operationId: GetArkivdel
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Arkivdel
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Arkivdel"
    put:
      description: Update a single Arkivdel.
      tags:
        - Arkivdel
      operationId: PutArkivdel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Arkivdel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Arkivdel"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Arkivdel"
    delete:
      description: Delete a single Arkivdel.
      tags:
        - Arkivdel
      operationId: DeleteArkivdel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Arkivdel
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Arkivdel"

  /behandlingsprotokoll/{id}:
    get:
      description: Get a single Behandlingsprotokoll.
      tags:
        - Behandlingsprotokoll
      operationId: GetBehandlingsprotokoll
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Behandlingsprotokoll
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Behandlingsprotokoll"
    put:
      description: Update a single Behandlingsprotokoll.
      tags:
        - Behandlingsprotokoll
      operationId: PutBehandlingsprotokoll
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Behandlingsprotokoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Behandlingsprotokoll"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Behandlingsprotokoll"
    delete:
      description: Delete a single Behandlingsprotokoll.
      tags:
        - Behandlingsprotokoll
      operationId: DeleteBehandlingsprotokoll
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Behandlingsprotokoll
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Behandlingsprotokoll"

  /dokumentobjekt/{id}:
    get:
      description: Get a single Dokumentobjekt.
      tags:
        - Dokumentobjekt
      operationId: GetDokumentobjekt
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentobjekt
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentobjekt"
    put:
      description: Update a single Dokumentobjekt.
      tags:
        - Dokumentobjekt
      operationId: PutDokumentobjekt
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentobjekt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dokumentobjekt"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentobjekt"
    delete:
      description: Delete a single Dokumentobjekt.
      tags:
        - Dokumentobjekt
      operationId: DeleteDokumentobjekt
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentobjekt
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentobjekt"

  /identifikator/{id}:
    get:
      description: Get a single Identifikator.
      tags:
        - Identifikator
      operationId: GetIdentifikator
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Identifikator
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identifikator"
    put:
      description: Update a single Identifikator.
      tags:
        - Identifikator
      operationId: PutIdentifikator
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Identifikator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Identifikator"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identifikator"
    delete:
      description: Delete a single Identifikator.
      tags:
        - Identifikator
      operationId: DeleteIdentifikator
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Identifikator
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identifikator"

  /innsynskrav:
    get:
      description: Get a Innsynskrav list.
      tags:
        - Innsynskrav
      operationId: GetInnsynskravList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: bruker
          in: query
          description: Filter by BrukerId
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Innsynskrav"
    post:
      description: Create a Innsynskrav.
      tags:
        - Innsynskrav
      operationId: PostInnsynskrav
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Innsynskrav"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"

  /innsynskrav/{id}:
    get:
      description: Get a Innsynskrav.
      tags:
        - Innsynskrav
      operationId: GetInnsynskrav
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Innsynskrav
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"
    put:
      description: Update a Innsynskrav.
      tags:
        - Innsynskrav
      operationId: PutInnsynskrav
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Innsynskrav
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Innsynskrav"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"
    delete:
      description: Delete a request.
      tags:
        - Innsynskrav
      operationId: DeleteInnsynskrav
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Innsynskrav
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"

  /innsynskrav/{id}/verify/{secret}:
    put:
      description: Verify a Innsynskrav.
      tags:
        - Innsynskrav
      operationId: VerifyInnsynskrav
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Innsynskrav
        - name: secret
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"

  /innsynskravDel/{id}:
    get:
      description: Get a single InnsynskravDel.
      tags:
        - InnsynskravDel
      operationId: GetInnsynskravDel
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: InnsynskravDel
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InnsynskravDel"
    put:
      description: Update a single InnsynskravDel.
      tags:
        - InnsynskravDel
      operationId: PutInnsynskravDel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: InnsynskravDel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InnsynskravDel"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InnsynskravDel"
    delete:
      description: Delete a single InnsynskravDel.
      tags:
        - InnsynskravDel
      operationId: DeleteInnsynskravDel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: InnsynskravDel
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InnsynskravDel"

  /klasse/{id}:
    get:
      description: Get a single Klasse.
      tags:
        - Klasse
      operationId: GetKlasse
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Klasse
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klasse"
    put:
      description: Update a single Klasse.
      tags:
        - Klasse
      operationId: PutKlasse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Klasse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Klasse"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klasse"
    delete:
      description: Delete a single Klasse.
      tags:
        - Klasse
      operationId: DeleteKlasse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Klasse
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Klasse"

  /korrespondansepart:
    get:
      description: Get a Korrespondansepart list.
      tags:
        - Korrespondansepart
      operationId: GetKorrespondansepartList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: journalpost
          in: query
          description: Filter by Journalpost
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Korrespondansepart"

  /korrespondansepart/{id}:
    get:
      description: Get a single Korrespondansepart.
      tags:
        - Korrespondansepart
      operationId: GetKorrespondansepart
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Korrespondansepart
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Korrespondansepart"
    put:
      description: Update a single Korrespondansepart.
      tags:
        - Korrespondansepart
      operationId: PutKorrespondansepart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Korrespondansepart
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Korrespondansepart"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Korrespondansepart"
    delete:
      description: Delete a single Korrespondansepart.
      tags:
        - Korrespondansepart
      operationId: DeleteKorrespondansepart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Korrespondansepart
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Korrespondansepart"

  /lagretSak:
    get:
      description: Get a LagretSak list.
      tags:
        - LagretSak
      operationId: GetLagretSakList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: bruker
          in: query
          description: Filter by BrukerId
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LagretSak"

  /lagretSak/{id}:
    get:
      description: Get a single LagretSak.
      tags:
        - LagretSak
      operationId: GetLagretSak
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSak"
    put:
      description: Update a single LagretSak.
      tags:
        - LagretSak
      operationId: PutLagretSak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSak
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LagretSak"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSak"
    delete:
      description: Delete a single LagretSak.
      tags:
        - LagretSak
      operationId: DeleteLagretSak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSak"

  /lagretSoek:
    get:
      description: Get a LagretSoek list.
      tags:
        - LagretSoek
      operationId: GetLagretSoekList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: bruker
          in: query
          description: Filter by BrukerId
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LagretSoek"

  /lagretSoek/{id}:
    get:
      description: Get a single LagretSoek.
      tags:
        - LagretSoek
      operationId: GetLagretSoek
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSoek
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSoek"
    put:
      description: Update a single LagretSoek.
      tags:
        - LagretSoek
      operationId: PutLagretSoek
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSoek
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LagretSoek"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSoek"
    delete:
      description: Delete a single LagretSoek.
      tags:
        - LagretSoek
      operationId: DeleteLagretSoek
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSoek
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSoek"

  /moetedeltaker/{id}:
    get:
      description: Get a single Moetedeltaker.
      tags:
        - Moetedeltaker
      operationId: GetMoetedeltaker
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetedeltaker
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetedeltaker"
    put:
      description: Update a single Moetedeltaker.
      tags:
        - Moetedeltaker
      operationId: PutMoetedeltaker
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetedeltaker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetedeltaker"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetedeltaker"
    delete:
      description: Delete a single Moetedeltaker.
      tags:
        - Moetedeltaker
      operationId: DeleteMoetedeltaker
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetedeltaker
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetedeltaker"

  /moetedokument:
    get:
      description: Get a Moetedokument list.
      tags:
        - Moetemappe
      operationId: GetMoetedokumentList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: moetemappe
          in: query
          description: Filter by MoetemappeId
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Moetedokument"

  /moetedokument/{id}:
    get:
      description: Get a single Moetedokument.
      tags:
        - Moetedokument
      operationId: GetMoetedokument
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetedokument
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetedokument"
    put:
      description: Update a single Moetedokument.
      tags:
        - Moetedokument
      operationId: PutMoetedokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetedokument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetedokument"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetedokument"
    delete:
      description: Delete a single Moetedokument.
      tags:
        - Moetedokument
      operationId: DeleteMoetedokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetedokument
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetedokument"

  /moetesak:
    get:
      description: Get a Moetesak list.
      tags:
        - Moetemappe
      operationId: GetMoetesakList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: moetemappe
          in: query
          description: Filter by MoetemappeId
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Moetesak"

  /moetesak/{id}:
    get:
      description: Get a single Moetesak.
      tags:
        - Moetesak
      operationId: GetMoetesak
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetesak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetesak"
    put:
      description: Update a single Moetesak.
      tags:
        - Moetesak
      operationId: PutMoetesak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetesak
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetesak"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetesak"
    delete:
      description: Delete a single Moetesak.
      tags:
        - Moetesak
      operationId: DeleteMoetesak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetesak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetesak"

  /moetesaksbeskrivelse/{id}:
    get:
      description: Get a single Moetesaksbeskrivelse.
      tags:
        - Moetesaksbeskrivelse
      operationId: GetMoetesaksbeskrivelse
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetesaksbeskrivelse
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetesaksbeskrivelse"
    put:
      description: Update a single Moetesaksbeskrivelse.
      tags:
        - Moetesaksbeskrivelse
      operationId: PutMoetesaksbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetesaksbeskrivelse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetesaksbeskrivelse"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetesaksbeskrivelse"
    delete:
      description: Delete a single Moetesaksbeskrivelse.
      tags:
        - Moetesaksbeskrivelse
      operationId: DeleteMoetesaksbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetesaksbeskrivelse
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetesaksbeskrivelse"

  /skjerming/{id}:
    get:
      description: Get a single Skjerming.
      tags:
        - Skjerming
      operationId: GetSkjerming
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Skjerming
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Skjerming"
    put:
      description: Update a single Skjerming.
      tags:
        - Skjerming
      operationId: PutSkjerming
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Skjerming
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Skjerming"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Skjerming"
    delete:
      description: Delete a single Skjerming.
      tags:
        - Skjerming
      operationId: DeleteSkjerming
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Skjerming
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Skjerming"

  /utredning/{id}:
    get:
      description: Get a single Utredning.
      tags:
        - Utredning
      operationId: GetUtredning
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Utredning
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utredning"
    put:
      description: Update a single Utredning.
      tags:
        - Utredning
      operationId: PutUtredning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Utredning
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utredning"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utredning"
    delete:
      description: Delete a single Utredning.
      tags:
        - Utredning
      operationId: DeleteUtredning
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Utredning
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utredning"

  /vedtak/{id}:
    get:
      description: Get a single Vedtak.
      tags:
        - Vedtak
      operationId: GetVedtak
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Vedtak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vedtak"
    put:
      description: Update a single Vedtak.
      tags:
        - Vedtak
      operationId: PutVedtak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Vedtak
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vedtak"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vedtak"
    delete:
      description: Delete a single Vedtak.
      tags:
        - Vedtak
      operationId: DeleteVedtak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Vedtak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vedtak"

  /votering/{id}:
    get:
      description: Get a single Votering.
      tags:
        - Votering
      operationId: GetVotering
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Votering
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Votering"
    put:
      description: Update a single Votering.
      tags:
        - Votering
      operationId: PutVotering
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Votering
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Votering"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Votering"
    delete:
      description: Delete a single Votering.
      tags:
        - Votering
      operationId: DeleteVotering
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Votering
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Votering"

  /enhet:
    get:
      description: Get a Enhet list.
      tags:
        - Enhet
      operationId: GetEnhetList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: parent
          in: query
          description: Filter by parent
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Enhet"
    post:
      description: Add a new Enhet.
      tags:
        - Enhet
      operationId: PostEnhet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enhet"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /enhet/{id}:
    get:
      description: Get a single Enhet.
      tags:
        - Enhet
      operationId: GetEnhet
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Enhet
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"
    put:
      description: Update a single Enhet.
      tags:
        - Enhet
      operationId: PutEnhet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Enhet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enhet"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"
    delete:
      description: Delete a single Enhet.
      tags:
        - Enhet
      operationId: DeleteEnhet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Enhet
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /enhet/{id}/underenhet:
    get:
      description: Get all underenhet for a Enhet.
      tags:
        - Enhet
      operationId: GetUnderenhetList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Enhet
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Enhet"

    post:
      description: Add a subEnhet to a Enhet.
      tags:
        - Enhet
      operationId: PostEnhetUnderenhet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Enhet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enhet"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /enhet/{id}/underenhet/{subId}:
    delete:
      description: Delete a subEnhet from a Enhet.
      tags:
        - Enhet
      operationId: DeleteUnderenhet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Enhet
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Enhet
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /journalpost:
    get:
      description: Get a list of journalpost.
      tags:
        - Journalpost
      operationId: GetJournalpostList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: saksmappe
          in: query
          description: Filter by SaksmappeId
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Journalpost"

  /journalpost/{id}:
    get:
      description: Get a single record.
      tags:
        - Journalpost
      operationId: GetJournalpost
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"
    put:
      description: Update a record
      tags:
        - Journalpost
      operationId: PutJournalpost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Journalpost"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"
    delete:
      description: Delete a record.
      tags:
        - Journalpost
      operationId: DeleteJournalpost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"

  /journalpost/{id}/korrespondansepart:
    get:
      description: Get a list of Korrespondansepart for a Journalpost.
      tags:
        - Journalpost
      operationId: GetJournalpostKorrespondansepartList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Korrespondansepart"
    post:
      description: Add a new Korrespondansepart to a Journalpost.
      tags:
        - Journalpost
      operationId: PostJournalpostKorrespondansepart
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Korrespondansepart"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Korrespondansepart"

  /journalpost/{id}/korrespondansepart/{subId}:
    delete:
      description: Delete a Korrespondansepart from a Journalpost.
      tags:
        - Journalpost
      operationId: RemoveKorrespondansepartFromJournalpost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Korrespondansepart
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"

  /journalpost/{id}/dokumentbeskrivelse:
    get:
      description: Get a list of Dokumentbeskrivelse for a Journalpost.
      tags:
        - Journalpost
      operationId: GetJournalpostDokumentbeskrivelseList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Dokumentbeskrivelse"
    post:
      description: Add a new Dokumentbeskrivelse to a Journalpost.
      tags:
        - Journalpost
      operationId: PostJournalpostDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dokumentbeskrivelse"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentbeskrivelse"

  /journalpost/{id}/dokumentbeskrivelse/{subId}:
    delete:
      description: Delete a Dokumentbeskrivelse from a Journalpost.
      tags:
        - Journalpost
      operationId: RemoveDokumentbeskrivelseFromJournalpost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentbeskrivelse
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"

  /dokumentbeskrivelse:
    get:
      description: Get a Dokumentbeskrivelse list.
      tags:
        - Dokumentbeskrivelse
      operationId: GetDokumentbeskrivelseList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
        - name: journalpost
          in: query
          description: Filter by Journalpost id.
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Dokumentbeskrivelse"

  /dokumentbeskrivelse/{id}:
    get:
      description: Get a single record.
      tags:
        - Dokumentbeskrivelse
      operationId: GetDokumentbeskrivelse
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentbeskrivelse
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentbeskrivelse"
    put:
      description: Update a document
      tags:
        - Dokumentbeskrivelse
      operationId: PutDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentbeskrivelse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dokumentbeskrivelse"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentbeskrivelse"
    delete:
      description: Delete a document.
      tags:
        - Dokumentbeskrivelse
      operationId: DeleteDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentbeskrivelse
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentbeskrivelse"

  /dokumentbeskrivelse/{id}/download/{subId}.{docExtension}:
    get:
      description: Download the binary file.
      tags:
        - Dokumentbeskrivelse
      operationId: DownloadDokumentbeskrivelse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentbeskrivelse
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Dokumentobjekt
        - in: path
          name: docExtension
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /saksmappe:
    get:
      description: Get a Saksmappe list.
      tags:
        - Saksmappe
      operationId: GetSaksmappeList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Saksmappe"
    post:
      description: Add a new Saksmappe.
      tags:
        - Saksmappe
      operationId: PostSaksmappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Saksmappe"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"

  /saksmappe/{id}:
    get:
      description: Get a Saksmappe.
      tags:
        - Saksmappe
      operationId: GetSaksmappe
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Saksmappe
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"
    put:
      description: Update a Saksmappe.
      tags:
        - Saksmappe
      operationId: PutSaksmappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Saksmappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Saksmappe"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"
    delete:
      description: Delete a Saksmappe.
      tags:
        - Saksmappe
      operationId: DeleteSaksmappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Saksmappe
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"

  /saksmappe/{id}/journalpost:
    get:
      description: Get Journalpost list for a Saksmappe.
      tags:
        - Saksmappe
      operationId: GetSaksmappeJournalpostList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Saksmappe
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Journalpost"

    post:
      description: Add a Journalpost to a Saksmappe.
      tags:
        - Saksmappe
      operationId: PostSaksmappeJournalpost
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Saksmappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Journalpost"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"

  /saksmappe/{id}/journalpost/{subId}:
    delete:
      description: Remove a Journalpost from a Saksmappe.
      tags:
        - Saksmappe
      operationId: RemoveJournalpostFromSaksmappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Saksmappe
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Journalpost
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"

  /moetemappe:
    get:
      description: Get a Moetemappe list.
      tags:
        - Moetemappe
      operationId: GetMoetemappeList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Moetemappe"
    post:
      description: Add a new Moetemappe.
      tags:
        - Moetemappe
      operationId: PostMoetemappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetemappe"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}:
    get:
      description: Get a Moetemappe.
      tags:
        - Moetemappe
      operationId: GetMoetemappe
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"
    put:
      description: Update a Moetemappe.
      tags:
        - Moetemappe
      operationId: PutMoetemappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetemappe"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"
    delete:
      description: Delete a Moetemappe.
      tags:
        - Moetemappe
      operationId: DeleteMoetemappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}/moetedokument:
    get:
      description: Get a Moetedokument list.
      tags:
        - Moetemappe
      operationId: GetMoetemappeMoetedokumentList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Moetedokument"
    post:
      description: Add a document to a meeting.
      tags:
        - Moetemappe
      operationId: PostMoetemappeMoetedokument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetedokument"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetedokument"

  /moetemappe/{id}/moetedokument/{subId}:
    delete:
      description: >-
        Remove a document from a meeting. This will delete the Moetedokument if it is orphaned.
      tags:
        - Moetemappe
      operationId: RemoveMoetedokumentFromMoetemappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetedokument
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}/moetesak:
    get:
      description: Get a Moetesak list for a Moetemappe.
      tags:
        - Moetemappe
      operationId: GetMoetemappeMoetesakList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Moetesak"
    post:
      description: Add a Moetesak to a Moetemappe.
      tags:
        - Moetemappe
      operationId: PostMoetemappeMoetesak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetesak"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetesak"

  /moetemappe/{id}/moetesak/{subId}:
    delete:
      description: Remove a Moetesak from a Moetemappe. This will delete the Moetesak if it is orphaned.
      tags:
        - Moetemappe
      operationId: RemoveMoetesakFromMoetemappe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetemappe
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Moetesak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /bruker:
    get:
      description: Get a Bruker list.
      tags:
        - Bruker
      operationId: GetBrukerList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Bruker"
    post:
      description: Add a new Bruker.
      tags:
        - Bruker
      operationId: PostBruker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bruker"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}:
    get:
      description: Get a single Bruker.
      tags:
        - Bruker
      operationId: GetBruker
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"
    put:
      description: Update a single Bruker.
      tags:
        - Bruker
      operationId: PutBruker
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bruker"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"
    delete:
      description: Delete a single Bruker.
      tags:
        - Bruker
      operationId: DeleteBruker
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/innsynskrav:
    get:
      description: Get all innsynskrav for a Bruker.
      tags:
        - Bruker
      operationId: GetBrukerInnsynskravList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Innsynskrav"

    post:
      description: Add a Innsynskrav to a Bruker.
      tags:
        - Bruker
      operationId: PostBrukerInnsynskrav
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Innsynskrav"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"

  /bruker/{id}/innsynskrav/{subId}:
    delete:
      description: Delete a Innsynskrav from a Bruker.
      tags:
        - Bruker
      operationId: DeleteBrukerInnsynskrav
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Innsynskrav
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/lagretSoek:
    get:
      description: Get LagretSoek list for a Bruker.
      tags:
        - Bruker
      operationId: GetBrukerLagretSoekList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LagretSoek"

    post:
      description: Add a saved search to a Bruker.
      tags:
        - Bruker
      operationId: PostBrukerLagretSoek
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LagretSoek"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSoek"

  /bruker/{id}/lagretSoek/{subId}:
    delete:
      description: Delete a LagretSoek from a Bruker.
      tags:
        - Bruker
      operationId: DeleteBrukerLagretSoek
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSoek
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/lagretSak:
    get:
      description: Get LagretSak list for a Bruker.
      tags:
        - Bruker
      operationId: GetBrukerLagretSakList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LagretSak"

    post:
      description: Add a saved case to a Bruker.
      tags:
        - Bruker
      operationId: PostBrukerLagretSak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LagretSak"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LagretSak"

  /bruker/{id}/lagretSak/{subId}:
    delete:
      description: Delete a LagretSak from a Bruker.
      tags:
        - Bruker
      operationId: DeleteBrukerLagretSak
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - name: subId
          in: path
          required: true
          schema:
            type: string
          x-resourceId: LagretSak
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/activate/{secret}:
    put:
      description: Activate a Bruker.
      tags:
        - Bruker
      operationId: Activate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - in: path
          name: secret
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/updatePassword:
    put:
      description: Update password for a Bruker.
      tags:
        - Bruker
      operationId: PutBrukerPassword
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
                  format: password
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/updatePassword/{secret}:
    put:
      description: Update password for a Bruker.
      tags:
        - Bruker
      operationId: PutBrukerPasswordWithSecret
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
        - in: path
          name: secret
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  format: password

      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/requestPasswordReset:
    put:
      description: Request password reset for a Bruker.
      tags:
        - Bruker
      operationId: RequestPasswordReset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Bruker
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /tilbakemelding:
    get:
      description: Get a Tilbakemelding list.
      tags:
        - Tilbakemelding
      operationId: GetTilbakemeldingList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - $ref: "#/components/parameters/StartingAfter"
        - $ref: "#/components/parameters/EndingBefore"
        - $ref: "#/components/parameters/Ids"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Tilbakemelding"
    post:
      description: Add a new Tilbakemelding.
      tags:
        - Tilbakemelding
      operationId: PostTilbakemelding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tilbakemelding"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tilbakemelding"

  /tilbakemelding/{id}:
    get:
      description: Get a single Tilbakemelding.
      tags:
        - Tilbakemelding
      operationId: GetTilbakemelding
      parameters:
        - $ref: "#/components/parameters/Expand"
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Tilbakemelding
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tilbakemelding"
    put:
      description: Update a single Tilbakemelding.
      tags:
        - Tilbakemelding
      operationId: PutTilbakemelding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Tilbakemelding
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tilbakemelding"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tilbakemelding"
    delete:
      description: Delete a single Tilbakemelding.
      tags:
        - Tilbakemelding
      operationId: DeleteTilbakemelding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-resourceId: Tilbakemelding
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tilbakemelding"

  /search:
    get:
      description: Search Journalpost, Moetemappe, Moetesak, Saksmappe
      operationId: Search
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/SortOrder"
        - name: sortBy
          in: query
          description: >-
            The field to sort the result set by. The default is `created`.
          required: false
          schema:
            type: string
            enum:
              [
                "created",
                "updated",
                "offentligTittel",
                "offentligTittelSensitiv",
              ]
        - name: query
          in: query
          description: >-
            A query string used to filter the result set.
          required: false
          schema:
            type: string
        - name: resource
          in: query
          description: >-
            Filter the source by resource type.
          required: false
          schema:
            type: string
            enum: ["Journalpost", "Moetemappe", "Moetesak", "Saksmappe"]
        - name: administrativEnhetId
          in: query
          description: >-
            Filter the source by administrativEnhetId.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: administrativEnhetTransitiveId
          in: query
          description: >-
            Filter the source by administrativeEnhet, including parent units.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: administrativEnhetIri
          in: query
          description: >-
            Filter the source by administrativEnhetIri.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: administrativEnhetTransitiveIri
          in: query
          description: >-
            Filter the source by administrativeEnhet, including parent units.
          required: false
          schema:
            type: array
            items:
              type: string

      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          anyOf:
                            - $ref: "#/components/schemas/Journalpost"
                            - $ref: "#/components/schemas/Moetemappe"
                            - $ref: "#/components/schemas/Moetesak"
                            - $ref: "#/components/schemas/Saksmappe"

security:
  - ApiKey: []

components:
  schemas:
    Base:
      type: object
      x-resourceId: Base
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          readOnly: true
        externalId:
          type: string
          description: >-
            An external ID for the resource. This is similar to "systemId", but
            will be used for legacy IRIs that were used in earlier eInnsyn versions.
      required:
        - id
        - created
        - updated
        - entity

    ArkivBase:
      type: object
      x-resourceId: ArkivBase
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            systemId:
              type: string
            journalenhet:
              readOnly: true
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Enhet"
          required:
            - journalenhet
          x-expandableFields:
            - journalenhet

    Arkiv:
      type: object
      x-resourceId: Arkiv
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Arkiv"]
              readOnly: true
            tittel:
              type: string
          required:
            - tittel

    Arkivdel:
      type: object
      x-resourceId: Arkivdel
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Arkivdel"]
              readOnly: true
            tittel:
              type: string
          required:
            - tittel

    Klasse:
      type: object
      x-resourceId: Klasse
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Klasse"]
              readOnly: true
            tittel:
              type: string
          required:
            - tittel

    Registrering:
      type: object
      x-resourceId: Registrering
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            offentligTittel:
              type: string
            offentligTittelSensitiv:
              type: string
            beskrivelse:
              type: string
            skjerming:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Skjerming"
            publisertDato:
              type: string
              format: date
              readOnly: true
            korrespondansepart:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Korrespondansepart"
            dokumentbeskrivelse:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Dokumentbeskrivelse"
          required:
            - offentligTittel
            - offentligTittelSensitiv
          x-expandableFields:
            - skjerming
            - korrespondansepart
            - dokumentbeskrivelse

    Journalpost:
      type: object
      x-resourceId: Journalpost
      allOf:
        - $ref: "#/components/schemas/Registrering"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Journalpost"]
            journalaar:
              type: integer
            journalsekvensnummer:
              type: integer
            journalpostnummer:
              type: integer
            journalposttype:
              type: string
            journaldato:
              type: string
              format: date
            dokumentetsDato:
              type: string
              format: date
            administrativEnhet:
              type: string
            administrativEnhetObjekt:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Enhet"
            sorteringstype:
              type: string
              readOnly: true
            saksmappe:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Saksmappe"
          required:
            - journalaar
            - journalsekvensnummer
            - journalpostnummer
            - journalposttype
            - journaldato
          x-expandableFields:
            - saksmappe

    Mappe:
      type: object
      x-resourceId: Mappe
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            offentligTittel:
              type: string
            offentligTittelSensitiv:
              type: string
            beskrivelse:
              type: string
            noekkelord:
              type: string
            publisertDato:
              type: string
              format: date
              readOnly: true
            parent:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Mappe"
                - $ref: "#/components/schemas/Arkiv"
                - $ref: "#/components/schemas/Arkivdel"
                - $ref: "#/components/schemas/Klasse"
          required:
            - offentligTittel
            - offentligTittelSensitiv
          x-expandableFields:
            - parent

    Saksmappe:
      type: object
      x-resourceId: Saksmappe
      allOf:
        - $ref: "#/components/schemas/Mappe"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Saksmappe"]
              readOnly: true
            saksaar:
              type: integer
            sakssekvensnummer:
              type: integer
            saksnummer:
              type: string
              readOnly: true
            saksdato:
              type: string
              format: date
            journalpost:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Journalpost"
            administrativEnhet:
              type: string
            administrativEnhetObjekt:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Enhet"
          required:
            - saksaar
            - sakssekvensnummer
          x-expandableFields:
            - journalpost
            - administrativEnhetObjekt

    Moetemappe:
      type: object
      x-resourceId: Moetemappe
      allOf:
        - $ref: "#/components/schemas/Mappe"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetemappe"]
              readOnly: true
            moetenummer:
              type: string
            utvalg:
              type: string
            utvalgObjekt:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Enhet"
            moetedato:
              type: string
              format: date-time
            moetested:
              type: string
            videoLink:
              type: string
              maxLength: 5000
            referanseForrigeMoete:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetemappe"
            referanseNesteMoete:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetemappe"
            moetedokument:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Moetedokument"
            moetesak:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Moetesak"
          required:
            - moetenummer
            - utvalg
            - moetedato
          x-expandableFields:
            - utvalgObjekt
            - referanseForrigeMoete
            - referanseNesteMoete
            - moetedokument
            - moetesak

    Moetesak:
      type: object
      x-resourceId: Moetesak
      allOf:
        - $ref: "#/components/schemas/Registrering"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetesak"]
              readOnly: true
            moetesakstype:
              type: string
            moetesaksaar:
              type: integer
            moetesakssekvensnummer:
              type: integer
            administrativEnhet:
              type: string
            administrativEnhetObjekt:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Enhet"
            videoLink:
              type: string
            utredning:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Utredning"
            innstilling:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            vedtak:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Vedtak"
            moetemappe:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetemappe"
          required:
            - moetesakstype
            - moetesaksaar
            - moetesakssekvensnummer
          x-expandableFields:
            - administrativEnhetObjekt
            - utredning
            - innstilling
            - vedtak
            - moetemappe

    Utredning:
      type: object
      x-resourceId: Utredning
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Utredning"]
              readOnly: true
            saksbeskrivelse:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            innstilling:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            utredningsdokumenter:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Dokumentbeskrivelse"
          required:
            - saksbeskrivelse
            - innstilling
          x-expandableFields:
            - saksbeskrivelse
            - innstilling
            - utredningsdokumenter

    Vedtak:
      type: object
      x-resourceId: Vedtak
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Vedtak"]
              readOnly: true
            vedtakstekst:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            votering:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Votering"
            behandlingsprotokoll:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Behandlingsprotokoll"
            vedtaksdokumenter:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Dokumentbeskrivelse"
            dato:
              type: string
              format: date
          required:
            - vedtakstekst
            - dato
          x-expandableFields:
            - vedtakstekst
            - votering
            - behandlingsprotokoll
            - vedtaksdokumenter

    Votering:
      type: object
      x-resourceId: Votering
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Votering"]
              readOnly: true
            moetedeltaker:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetedeltaker"
            stemme:
              type: string
              enum:
                - Ja
                - Nei
                - Blankt
            representerer:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Identifikator"
          required:
            - moetedeltaker
            - stemme
          x-expandableFields:
            - moetedeltaker
            - representerer

    Moetesaksbeskrivelse:
      type: object
      x-resourceId: Moetesaksbeskrivelse
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetesaksbeskrivelse"]
              readOnly: true
            tekstInnhold:
              type: string
            tekstFormat:
              type: string
          required:
            - tekstInnhold
            - tekstFormat

    Behandlingsprotokoll:
      type: object
      x-resourceId: Behandlingsprotokoll
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Behandlingsprotokoll"]
              readOnly: true
            tekstInnhold:
              type: string
            tekstFormat:
              type: string
          required:
            - tekstInnhold
            - tekstFormat
            - test

    Moetedeltaker:
      type: object
      x-resourceId: Moetedeltaker
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetedeltaker"]
              readOnly: true
            moetedeltakerNavn:
              type: string
            moetedeltakerFunksjon:
              type: string
          required:
            - moetedeltakerNavn

    Korrespondansepart:
      type: object
      x-resourceId: Korrespondansepart
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Korrespondansepart"]
              readOnly: true
            korrespondansepartNavn:
              type: string
            korrespondansepartNavnSensitiv:
              type: string
            korrespondanseparttype:
              type: string
            saksbehandler:
              type: string
            epostadresse:
              type: string
            postnummer:
              type: string
            erBehandlingsansvarlig:
              type: boolean
            administrativEnhet:
              type: string
            journalpost:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Journalpost"
          required:
            - korrespondansepartNavn
            - korrespondansepartNavnSensitiv
            - korrespondanseparttype
          x-expandableFields:
            - journalpost

    Skjerming:
      type: object
      x-resourceId: Skjerming
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Skjerming"]
              readOnly: true
            skjermingshjemmel:
              type: string
            tilgangsrestriksjon:
              type: string
          required:
            - tilgangsrestriksjon

    Identifikator:
      type: object
      x-resourceId: Identifikator
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Identifikator"]
              readOnly: true
            navn:
              type: string
            identifikator:
              type: string
            initialer:
              type: string
            epostadresse:
              type: string

    Bruker:
      type: object
      x-resourceId: Bruker
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Bruker"]
              readOnly: true
            email:
              type: string
              format: email
            password:
              type: string
              format: password
            active:
              type: boolean
              default: false
              readOnly: true
            language:
              type: string
              default: nb
              enum:
                - nb
                - nn
                - en
                - se
          required:
            - email
            - password
          x-expandableFields:
            - lagretSak
            - lagretSoek
            - innsynskrav
            - innsynskravDel

    Innsynskrav:
      type: object
      x-resourceId: Innsynskrav
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Innsynskrav"]
              readOnly: true
            email:
              type: string
              format: email
            innsynskravDel:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/InnsynskravDel"
            verified:
              type: boolean
              default: false
              readOnly: true
            bruker:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Bruker"
            language:
              type: string
              enum:
                - nb
                - nn
                - en
                - se
          required:
            - email
            - innsynskravDel
          x-expandableFields:
            - bruker
            - innsynskravDel

    InnsynskravDel:
      type: object
      x-resourceId: InnsynskravDel
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["InnsynskravDel"]
              readOnly: true
            innsynskrav:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Innsynskrav"
            journalpost:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Journalpost"
            enhet:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Enhet"
              readOnly: true
            sent:
              type: string
              format: date-time
              readOnly: true
          required:
            - journalpost
          x-expandableFields:
            - innsynskrav
            - journalpost

    Enhet:
      type: object
      x-resourceId: Enhet
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Enhet"]
              readOnly: true
            navn:
              type: string
            navnNynorsk:
              type: string
            navnEngelsk:
              type: string
            navnSami:
              type: string
            orgnummer:
              type: string
            enhetskode:
              type: string
            kontaktpunktAdresse:
              type: string
            kontaktpunktEpost:
              type: string
              format: email
            kontaktpunktTelefon:
              type: string
            innsynskravEpost:
              type: string
              format: email
            enhetstype:
              type: string
              enum:
                - VIRKSOMHET
                - UTVALG
                - AVDELING
                - ADMINISTRATIVENHET
                - SEKSJON
                - BYDEL
                - KOMMUNE
            avsluttetDato:
              type: string
              format: date
            skjult:
              type: boolean
              default: false
            eFormidling:
              type: boolean
              default: false
            teknisk:
              type: boolean
              default: false
            skalKonvertereId:
              type: boolean
              default: false
            skalMottaKvittering:
              type: boolean
              default: false
            visToppnode:
              type: boolean
              default: false
            orderXmlVersjon:
              type: integer
            underenhet:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Enhet"
            parent:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Enhet"
          required:
            - navn
            - orgnummer
            - kontaktpunktEpost
            - innsynskravEpost
            - enhetstype
          x-expandableFields:
            - parent

    Dokumentbeskrivelse:
      type: object
      x-resourceId: Dokumentbeskrivelse
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Dokumentbeskrivelse"]
              readOnly: true
            tittel:
              type: string
            tittelSensitiv:
              type: string
            dokumentnummer:
              type: integer
            tilknyttetRegistreringSom:
              type: string
            dokumentobjekt:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Dokumentobjekt"
          required:
            - tittel
            - tittelSensitiv
            - dokumentnummer
            - tilknyttetRegistreringSom

    Dokumentobjekt:
      type: object
      x-resourceId: Dokumentobjekt
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Dokumentobjekt"]
              readOnly: true
            referanseDokumentfil:
              type: string
              format: url
            format:
              type: string
            sjekksum:
              type: string
            sjekksumAlgoritme:
              type: string
          required:
            - referanseDokumentfil
            - format
            - sjekksum
            - sjekksumAlgoritme

    Moetedokument:
      type: object
      x-resourceId: Moetedokument
      allOf:
        - $ref: "#/components/schemas/Registrering"
        - properties:
            entity:
              type: string
              enum: ["Moetedokument"]
              readOnly: true
            moetedokumenttype:
              type: string
            moetemappe:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Moetemappe"
              readOnly: true

    LagretSoek:
      type: object
      x-resourceId: LagretSoek
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["LagretSoek"]
              readOnly: true
            query:
              type: string
            bruker:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Bruker"
            varsling:
              type: boolean
              default: false

    LagretSak:
      type: object
      x-resourceId: LagretSak
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["LagretSak"]
              readOnly: true
            bruker:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Bruker"
            varsling:
              type: boolean
              default: false

    Tilbakemelding:
      type: object
      x-resourceId: Tilbakemelding
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Tilbakemelding"]
              readOnly: true
            messageFromUser:
              type: string
            path:
              type: string
            referer:
              type: string
            userAgent:
              type: string
            screenHeight:
              type: integer
            screenWidth:
              type: integer
            docHeight:
              type: integer
            docWidth:
              type: integer
            winHeight:
              type: integer
            winWidth:
              type: integer
            scrollX:
              type: integer
            scrollY:
              type: integer
            userSatisfied:
              type: boolean
            handledByAdmin:
              type: boolean
            adminComment:
              type: string

    ResultList:
      type: object
      x-resourceId: ResultList
      properties:
        next:
          type: string
          readOnly: true
        previous:
          type: string
          readOnly: true

    QueryParameters:
      type: object
      properties:
        expand:
          $ref: "#/components/parameters/Expand/schema"

    ListQueryParameters:
      type: object
      allOf:
        - $ref: "#/components/schemas/QueryParameters"
        - properties:
            limit:
              $ref: "#/components/parameters/Limit/schema"
            sortOrder:
              $ref: "#/components/parameters/SortOrder/schema"
            startingAfter:
              $ref: "#/components/parameters/StartingAfter/schema"
            endingBefore:
              $ref: "#/components/parameters/EndingBefore/schema"

  parameters:
    Expand:
      description: >-
        Specifies which fields in the response should be expanded.
      explode: true
      in: query
      name: expand
      required: false
      schema:
        items:
          type: string
        type: array
        default: []
      style: deepObject

    Limit:
      description: >-
        A limit on the number of objects to be returned. Limit can range
        between 1 and 100, and the default is 10.
      in: query
      name: limit
      required: false
      schema:
        type: integer
        default: 25

    SortOrder:
      description: >-
        The sort order of the result set. The default is ascending.
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
        enum: ["asc", "desc"]

    StartingAfter:
      description: >-
        A cursor for use in pagination. StartingAfter is a resource ID that
        defines your place in the list.
      in: query
      name: startingAfter
      schema:
        type: string

    EndingBefore:
      description: >-
        A cursor for use in pagination. EndingBefore is a resource ID that
        defines your place in the list.
      in: query
      name: endingBefore
      schema:
        type: string

    Ids:
      description: >-
        A list of resource IDs to return.
      in: query
      name: ids
      schema:
        type: array
        items:
          type: string
