openapi: "3.0.0"

info:
  title: eInnsyn REST API
  version: "3.0"

servers:
  - url: https://api.einnsyn.no/

tags:
  - name: Arkiv
  - name: Arkivdel
  - name: Bruker
  - name: Dokumentbeskrivelse
  - name: Dokumentobjekt
  - name: Enhet
  - name: Innsynskrav
  - name: InnsynskravDel
  - name: Journalpost
  - name: Klasse
  - name: Korrespondansepart
  - name: Moetemappe
  - name: Saksmappe
  - name: Skjerming

paths:
  /enhet:
    get:
      description: Get a Enhet list.
      tags:
        - Enhet
      operationId: GetEnhets
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Enhet"
    post:
      description: Add a new Enhet.
      tags:
        - Enhet
      operationId: AddEnhet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enhet"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /enhet/{id}:
    get:
      description: Get a single Enhet.
      tags:
        - Enhet
      operationId: GetEnhet
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"
    put:
      description: Update a single Enhet.
      tags:
        - Enhet
      operationId: UpdateEnhet
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"
    delete:
      description: Delete a single Enhet.
      tags:
        - Enhet
      operationId: DeleteEnhet
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /enhet/{id}/underenhet:
    get:
      description: Get all underenhet for a Enhet.
      tags:
        - Enhet
      operationId: GetUnderenhets
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Enhet"

    post:
      description: Add a subEnhet to a Enhet.
      tags:
        - Enhet
      operationId: AddUnderenhet
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enhet"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /enhet/{id}/underenhet/{underenhetId}:
    delete:
      description: Delete a subEnhet from a Enhet.
      tags:
        - Enhet
      operationId: DeleteUnderenhet
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: underenhetId
          required: true
          schema:
            type: string
            maxLength: 500
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enhet"

  /journalpost:
    get:
      description: Get a list of journalpost.
      tags:
        - Journalpost
      operationId: GetJournalposts
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Journalpost"

  /journalpost/{id}:
    get:
      description: Get a single record.
      tags:
        - Journalpost
      operationId: GetJournalpost
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"
    put:
      description: Update a record
      tags:
        - Journalpost
      operationId: UpdateJournalpost
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Journalpost"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"
    delete:
      description: Delete a record.
      tags:
        - Journalpost
      operationId: DeleteJournalpost
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journalpost"

  /dokumentbeskrivelse/{id}:
    description: Metadata for actual downloadable files.
    get:
      description: Get a single record.
      tags:
        - Dokumentbeskrivelse
      operationId: GetDokumentbeskrivelse
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentbeskrivelse"
    put:
      description: Update a document
      tags:
        - Dokumentbeskrivelse
      operationId: UpdateDokumentbeskrivelse
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dokumentbeskrivelse"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentbeskrivelse"
    delete:
      description: Delete a document.
      tags:
        - Dokumentbeskrivelse
      operationId: DeleteDokumentbeskrivelse
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dokumentbeskrivelse"

  /dokumentbeskrivelse/{id}/download/{id}.{docExtension}:
    get:
      description: Download the binary file.
      tags:
        - Dokumentbeskrivelse
      operationId: DownloadDokumentbeskrivelse
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: docExtension
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /saksmappe:
    get:
      description: Get a Saksmappe list.
      tags:
        - Saksmappe
      operationId: GetSaksmappeList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Saksmappe"
    post:
      description: Add a new Saksmappe.
      tags:
        - Saksmappe
      operationId: AddSaksmappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Saksmappe"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"

  /saksmappe/{id}:
    get:
      description: Get a Saksmappe.
      tags:
        - Saksmappe
      operationId: GetSaksmappe
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"
    put:
      description: Update a Saksmappe.
      tags:
        - Saksmappe
      operationId: UpdateSaksmappe
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"
    delete:
      description: Delete a Saksmappe.
      tags:
        - Saksmappe
      operationId: DeleteSaksmappe
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"

  /saksmappe/{id}/journalpost:
    get:
      description: Get Journalpost list for a Saksmappe.
      tags:
        - Saksmappe
      operationId: GetJournalpostListForSaksmappe
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Journalpost"

    post:
      description: Add a Journalpost to a Saksmappe.
      tags:
        - Saksmappe
      operationId: AddJournalpostToSaksmappe
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Journalpost"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"

  /saksmappe/{id}/journalpost/{journalpostId}:
    delete:
      description: Remove a Journalpost from a Saksmappe.
      tags:
        - Saksmappe
      operationId: RemoveJournalpostFromSaksmappe
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: journalpostId
          required: true
          schema:
            type: string
            maxLength: 500
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Saksmappe"

  /moetemappe:
    get:
      description: Get a Moetemappe list.
      tags:
        - Moetemappe
      operationId: GetMoetemappeList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Moetemappe"
    post:
      description: Add a new Moetemappe.
      tags:
        - Moetemappe
      operationId: AddMoetemappe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetemappe"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}:
    get:
      description: Get a Moetemappe.
      tags:
        - Moetemappe
      operationId: GetMoetemappe
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"
    put:
      description: Update a Moetemappe.
      tags:
        - Moetemappe
      operationId: UpdateMoetemappe
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetemappe"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"
    delete:
      description: Delete a Moetemappe.
      tags:
        - Moetemappe
      operationId: DeleteMoetemappe
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}/moetedokument:
    get:
      description: Get a Moetedokument list.
      tags:
        - Moetemappe
      operationId: GetMoetedokumentList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Moetedokument"
    post:
      description: Add a document to a meeting.
      tags:
        - Moetemappe
      operationId: AddMoetedokumentToMoetemappe
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetedokument"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}/moetedokument/{moetedokumentId}:
    delete:
      description: >-
        Remove a document from a meeting. This will delete the Moetedokument if it is orphaned.
      tags:
        - Moetemappe
      operationId: RemoveMoetedokumentFromMoetemappe
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: moetedokumentId
          required: true
          schema:
            type: string
            maxLength: 500
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}/moetesak:
    get:
      description: Get a Moetesak list for a Moetemappe.
      tags:
        - Moetemappe
      operationId: GetMoetesakListForMoetemappe
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Moetesak"
    post:
      description: Add a Moetesak to a Moetemappe.
      tags:
        - Moetemappe
      operationId: AddMoetesakToMoetemappe
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Moetesak"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /moetemappe/{id}/moetesak/{moetesakId}:
    delete:
      description: Remove a Moetesak from a Moetemappe. This will delete the Moetesak if it is orphaned.
      tags:
        - Moetemappe
      operationId: RemoveMoetesakFromMoetemappe
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: moetesakId
          required: true
          schema:
            type: string
            maxLength: 500
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Moetemappe"

  /bruker:
    get:
      description: Get a Bruker list.
      tags:
        - Bruker
      operationId: GetBrukerList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Bruker"
    post:
      description: Add a new Bruker.
      tags:
        - Bruker
      operationId: AddBruker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bruker"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}:
    get:
      description: Get a single Bruker.
      tags:
        - Bruker
      operationId: GetBruker
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"
    put:
      description: Update a single Bruker.
      tags:
        - Bruker
      operationId: UpdateBruker
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"
    delete:
      description: Delete a single Bruker.
      tags:
        - Bruker
      operationId: DeleteBruker
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/innsynskrav:
    get:
      description: Get all innsynskrav for a Bruker.
      tags:
        - Bruker
      operationId: GetInnsynskravListForBruker
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Innsynskrav"

    post:
      description: Add a Innsynskrav to a Bruker.
      tags:
        - Bruker
      operationId: AddInnsynskravToBruker
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Innsynskrav"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/innsynskrav/{innsynskravId}:
    delete:
      description: Delete a Innsynskrav from a Bruker.
      tags:
        - Bruker
      operationId: DeleteInnsynskravFromBruker
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: innsynskravId
          required: true
          schema:
            type: string
            maxLength: 500
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/lagretSok:
    get:
      description: Get LagretSok list for a Bruker.
      tags:
        - Bruker
      operationId: GetLagretSokListForBruker
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LagretSoek"

    post:
      description: Add a saved search to a Bruker.
      tags:
        - Bruker
      operationId: AddLagretSokToBruker
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LagretSoek"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/lagretSok/{searchId}:
    delete:
      description: Delete a LagretSok from a Bruker.
      tags:
        - Bruker
      operationId: DeleteLagretSokFromBruker
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: searchId
          required: true
          schema:
            type: string
            maxLength: 500
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/lagretSak:
    get:
      description: Get LagretSak list for a Bruker.
      tags:
        - Bruker
      operationId: GetLagretSakListForBruker
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LagretSak"

    post:
      description: Add a saved case to a Bruker.
      tags:
        - Bruker
      operationId: AddLagretSakToBruker
      parameters:
        - $ref: "#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LagretSak"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /bruker/{id}/lagretSak/{caseId}:
    delete:
      description: Delete a LagretSak from a Bruker.
      tags:
        - Bruker
      operationId: DeleteLagretSakFromBruker
      parameters:
        - $ref: "#/components/parameters/Id"
        - in: path
          name: caseId
          required: true
          schema:
            type: string
            maxLength: 500
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bruker"

  /innsynskrav/:
    get:
      description: Get a Innsynskrav list.
      tags:
        - Innsynskrav
      operationId: GetInnsynskravList
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/ResultList"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Innsynskrav"

  /innsynskrav/{id}/:
    get:
      description: Get a Innsynskrav.
      tags:
        - Innsynskrav
      operationId: GetInnsynskrav
      parameters:
        - $ref: "#/components/parameters/Expand"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"
    delete:
      description: Delete a request.
      tags:
        - Innsynskrav
      operationId: DeleteInnsynskrav
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Innsynskrav"

components:
  schemas:
    Base:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        deleted:
          type: boolean
          readOnly: true
      required:
        - id
        - created
        - updated

    ArkivBase:
      type: object
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            systemId:
              type: string
              maxLength: 500
            journalenhet:
              readOnly: true
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Enhet"
          required:
            - systemId
            - journalenhet
          x-expandableFields:
            - journalenhet

    Arkiv:
      x-resourceId: Arkiv
      type: object
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            tittel:
              type: string
              maxLength: 500
          required:
            - tittel

    Arkivdel:
      x-resourceId: Arkivdel
      type: object
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Arkivdel"]
              readOnly: true
            tittel:
              type: string
              maxLength: 500
          required:
            - tittel

    Klasse:
      x-resourceId: Klasse
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Klasse"]
              readOnly: true
            tittel:
              type: string
              maxLength: 500
          required:
            - tittel

    Registrering:
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            offentligTittel:
              type: string
              maxLength: 500
            offentligTittelSensitiv:
              type: string
              maxLength: 500
            beskrivelse:
              type: string
              maxLength: 500
            skjerming:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Skjerming"
            korrespondansepart:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Korrespondansepart"
            dokumentbeskrivelse:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Dokumentbeskrivelse"
          required:
            - offentligTittel
            - offentligTittelSensitiv
          x-expandableFields:
            - skjerming
            - korrespondansepart
            - dokumentbeskrivelse

    Journalpost:
      x-resourceId: Journalpost
      allOf:
        - $ref: "#/components/schemas/Registrering"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Journalpost"]
            journalaar:
              type: integer
            journalsekvensnummer:
              type: integer
            journalpostnummer:
              type: integer
            journalposttype:
              type: string
              maxLength: 500
            journaldato:
              type: string
              format: date
              maxLength: 500
            sorteringstype:
              type: string
              readOnly: true
            saksmappe:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Saksmappe"
          required:
            - journalaar
            - journalsekvensnummer
            - journalpostnummer
            - journalposttype
            - journaldato
          x-expandableFields:
            - saksmappe

    Mappe:
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            offentligTittel:
              type: string
              maxLength: 500
            offentligTittelSensitiv:
              type: string
              maxLength: 500
            beskrivelse:
              type: string
              maxLength: 500
            noekkelord:
              type: string
              maxLength: 500
            parent:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Mappe"
                - $ref: "#/components/schemas/Arkiv"
                - $ref: "#/components/schemas/Arkivdel"
                - $ref: "#/components/schemas/Klasse"
          required:
            - offentligTittel
            - offentligTittelSensitiv
          x-expandableFields:
            - parent

    Saksmappe:
      x-resourceId: Saksmappe
      allOf:
        - $ref: "#/components/schemas/Mappe"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Saksmappe"]
              readOnly: true
            saksaar:
              type: integer
            sakssekvensnummer:
              type: integer
            saksdato:
              type: string
              format: date
              maxLength: 500
            journalpost:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Journalpost"
            administrativEnhet:
              type: string
              maxLength: 500
            administrativEnhetObjekt:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Enhet"
          required:
            - saksaar
            - sakssekvensnummer
            - saksdato
          x-expandableFields:
            - journalpost
            - administrativEnhetObjekt

    Moetemappe:
      x-resourceId: Moetemappe
      allOf:
        - $ref: "#/components/schemas/Mappe"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetemappe"]
              readOnly: true
            moetenummer:
              type: string
              maxLength: 500
            utvalg:
              type: string
              maxLength: 500
            utvalgObjekt:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Enhet"
            moetedato:
              type: string
              format: date-time
              maxLength: 500
            moetested:
              type: string
              maxLength: 500
            videoLink:
              type: string
              maxLength: 5000
            referanseForrigeMoete:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetemappe"
            referanseNesteMoete:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetemappe"
            moetedokument:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Moetedokument"
            moetesak:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Moetesak"
          required:
            - moetenummer
            - utvalg
            - moetedato
          x-expandableFields:
            - utvalgObjekt
            - referanseForrigeMoete
            - referanseNesteMoete
            - moetedokument
            - moetesak

    Moetesak:
      x-resourceId: Moetesak
      allOf:
        - $ref: "#/components/schemas/Registrering"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetesak"]
              readOnly: true
            moetesakstype:
              type: string
              maxLength: 500
            moetesaksaar:
              type: integer
            moetesakssekvensnummer:
              type: integer
            administrativEnhet:
              type: string
              maxLength: 500
            administrativEnhetObjekt:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Enhet"
            videoLink:
              type: string
              maxLength: 500
            utredning:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Utredning"
            innstilling:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            vedtak:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Vedtak"
            moetemappe:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetemappe"
          required:
            - moetesakstype
            - moetesaksaar
            - moetesakssekvensnummer
          x-expandableFields:
            - administrativEnhetObjekt
            - utredning
            - innstilling
            - vedtak
            - moetemappe

    Utredning:
      x-resourceId: Utredning
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Utredning"]
              readOnly: true
            saksbeskrivelse:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            innstilling:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            utredningsdokumenter:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Dokumentbeskrivelse"
          required:
            - saksbeskrivelse
            - innstilling
          x-expandableFields:
            - saksbeskrivelse
            - innstilling
            - utredningsdokumenter

    Vedtak:
      x-resourceId: Vedtak
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Vedtak"]
              readOnly: true
            vedtakstekst:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetesaksbeskrivelse"
            votering:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Votering"
            behandlingsprotokoll:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Behandlingsprotokoll"
            vedtaksdokumenter:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/Dokumentbeskrivelse"
            dato:
              type: string
              format: date
              maxLength: 500
          required:
            - vedtakstekst
            - dato
          x-expandableFields:
            - vedtakstekst
            - votering
            - behandlingsprotokoll
            - vedtaksdokumenter

    Votering:
      x-resourceId: Votering
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Votering"]
              readOnly: true
            moetedeltaker:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Moetedeltaker"
            stemme:
              type: string
              enum:
                - Ja
                - Nei
                - Blankt
            representerer:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Identifikator"
          required:
            - moetedeltaker
            - stemme
          x-expandableFields:
            - moetedeltaker
            - representerer

    Moetesaksbeskrivelse:
      x-resourceId: Moetesaksbeskrivelse
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetesaksbeskrivelse"]
              readOnly: true
            tekstInnhold:
              type: string
              maxLength: 500
            tekstFormat:
              type: string
              maxLength: 500
          required:
            - tekstInnhold
            - tekstFormat

    Behandlingsprotokoll:
      x-resourceId: Behandlingsprotokoll
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Behandlingsprotokoll"]
              readOnly: true
            tekstInnhold:
              type: string
              maxLength: 500
            tekstFormat:
              type: string
              maxLength: 500
          required:
            - tekstInnhold
            - tekstFormat

    Moetedeltaker:
      x-resourceId: Moetedeltaker
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Moetedeltaker"]
              readOnly: true
            moetedeltakerNavn:
              type: string
              maxLength: 500
            moetedeltakerFunksjon:
              type: string
              maxLength: 500
          required:
            - moetedeltakerNavn

    Korrespondansepart:
      x-resourceId: Korrespondansepart
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - type: object
          properties:
            entity:
              type: string
              enum: ["Korrespondansepart"]
              readOnly: true
            korrespondansepartNavn:
              type: string
              maxLength: 500
            korrespondansepartNavnSensitiv:
              type: string
              maxLength: 500
            korrespondansepartType:
              type: string
              maxLength: 500
            journalpost:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Journalpost"
          required:
            - korrespondansepartNavn
            - korrespondansepartNavnSensitiv
            - korrespondansepartType
            - journalpost
          x-expandableFields:
            - journalpost

    Skjerming:
      x-resourceId: Skjerming
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Skjerming"]
              readOnly: true
            skjermingshjemmel:
              type: string
              maxLength: 500
            tilgangsrestriksjon:
              type: string
              maxLength: 500
          required:
            - tilgangsrestriksjon

    Identifikator:
      x-resourceId: Identifikator
      allOf:
        - $ref: "#/components/schemas/ArkivBase"
        - properties:
            entity:
              type: string
              enum: ["Identifikator"]
              readOnly: true
            navn:
              type: string
              maxLength: 500
            identifikator:
              type: string
              maxLength: 500
            initialer:
              type: string
              maxLength: 500
            epostadresse:
              type: string
              maxLength: 500

    Bruker:
      x-resourceId: Bruker
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Bruker"]
              readOnly: true
            email:
              type: string
              format: email
            password:
              type: string
              writeOnly: true
            savedSaksmappe:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/Saksmappe"
            savedSearches:
              type: array
              items:
                anyOf:
                  - type: string
                  - $ref: "#/components/schemas/LagretSoek"
          required:
            - email
            - password
          x-expandableFields:
            - savedSaksmappe
            - savedSearches

    Innsynskrav:
      x-resourceId: Innsynskrav
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Innsynskrav"]
              readOnly: true
            email:
              type: string
            innsynskravDel:
              type: array
              items:
                anyOf:
                  - type: string
                    maxLength: 500
                  - $ref: "#/components/schemas/InnsynskravDel"
            # sendtTilVirksomhet date?
            verified:
              type: boolean
              default: false
              readOnly: true
            bruker:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Bruker"
            language:
              type: string
              enum:
                - nb
                - nn
                - en
                - se
          required:
            - email
            - innsynskravDel
          x-expandableFields:
            - bruker
            - innsynskravDel

    InnsynskravDel:
      x-resourceId: InnsynskravDel
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["InnsynskravDel"]
              readOnly: true
            innsynskrav:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Innsynskrav"
            journalpost:
              anyOf:
                - type: string
                - $ref: "#/components/schemas/Journalpost"
          required:
            - innsynskrav
            - journalpost
          x-expandableFields:
            - innsynskrav
            - journalpost

    Enhet:
      x-resourceId: Enhet
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Enhet"]
              readOnly: true
            navn:
              type: string
              maxLength: 500
            navnNynorsk:
              type: string
              maxLength: 500
            navnEngelsk:
              type: string
              maxLength: 500
            navnSami:
              type: string
              maxLength: 500
            orgnummer:
              type: string
              maxLength: 500
            enhetskode:
              type: string
              maxLength: 500
            kontaktpunktAdresse:
              type: string
              maxLength: 500
            kontaktpunktEpost:
              type: string
              format: email
              maxLength: 500
            kontaktpunktTelefon:
              type: string
              maxLength: 500
            innsynskravEpost:
              type: string
              maxLength: 500
            enhetstype:
              type: string
              enum:
                - VIRKSOMHET
                - UTVALG
                - AVDELING
                - ADMINISTRATIVENHET
                - SEKSJON
                - BYDEL
                - KOMMUNE
            skjult:
              type: boolean
              default: false
            eFormidling:
              type: boolean
              default: false
            teknisk:
              type: boolean
              default: false
            skalKonvertereId:
              type: boolean
              default: false
            skalMottaKvittering:
              type: boolean
              default: false
            orderXmlVersjon:
              type: string
              maxLength: 500
            parent:
              anyOf:
                - type: string
                  maxLength: 500
                - $ref: "#/components/schemas/Enhet"
          required:
            - navn
            - orgnummer
            - kontaktpunktEpost
            - innsynskravEpost
            - enhetstype
          x-expandableFields:
            - parent

    Dokumentbeskrivelse:
      x-resourceId: Dokumentbeskrivelse
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Dokumentbeskrivelse"]
              readOnly: true
            tittel:
              type: string
            tittelSensitiv:
              type: string
            dokumenttype:
              type: string
            dokumentnummer:
              type: integer
            tilknyttetRegistreringSom:
              type: string
          required:
            - tittel
            - tittelSensitiv
            - dokumenttype
            - dokumentnummer
            - tilknyttetRegistreringSom

    Dokumentobjekt:
      x-resourceId: Dokumentobjekt
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["Dokumentobjekt"]
              readOnly: true
            referanseDokumentfil:
              type: string
            format:
              type: string
            sjekksum:
              type: string
            sjekksumAlgoritme:
              type: string
          required:
            - referanseDokumentfil
            - format
            - sjekksum
            - sjekksumAlgoritme

    Moetedokument:
      x-resourceId: Moetedokument
      allOf:
        - $ref: "#/components/schemas/Registrering"
        - properties:
            entity:
              type: string
              enum: ["Moetedokument"]
              readOnly: true
            moetedokumenttype:
              type: string

    LagretSoek:
      x-resourceId: LagretSoek
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["LagretSoek"]
              readOnly: true
            query:
              type: string

    LagretSak:
      x-resourceId: LagretSak
      allOf:
        - $ref: "#/components/schemas/Base"
        - properties:
            entity:
              type: string
              enum: ["LagretSak"]
              readOnly: true
            query:
              type: string

    SearchQuery:
      properties:
        limit:
          type: integer
          default: 25
          minimum: 1
          maximum: 50
        query:
          type: string
        filter:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              value:
                type: string
              matching:
                type: string
                enum: ["=", "!=", ">", "<", "~"]

    ResultList:
      properties:
        next:
          type: string
          readOnly: true
        previous:
          type: string
          readOnly: true

  parameters:
    Id:
      in: path
      name: id
      required: true
      schema:
        type: string
        maxLength: 500

    Expand:
      description: >-
        Specifies which fields in the response should be expanded.
      explode: true
      in: query
      name: expand
      required: false
      schema:
        items:
          maxLength: 500
          type: string
        type: array
      style: deepObject

    Limit:
      description: >-
        A limit on the number of objects to be returned. Limit can range
        between 1 and 100, and the default is 10.
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
